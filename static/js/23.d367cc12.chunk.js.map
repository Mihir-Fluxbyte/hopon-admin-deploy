{"version":3,"sources":["components/WidgetPreviewer.js","components/widgets/quick-stats/QuickStats2.js","components/dashboard/overview/OverviewInbox.js","components/dashboard/overview/OverviewLatestTransactions.js","icons/ArrowRight.js","components/dashboard/overview/OverviewTotalTransactions.js","icons/ChevronUp.js","pages/dashboard/Overview.js"],"names":["WidgetPreviewer","props","element","settings","useSettings","useState","theme","selectedTheme","setSelectedTheme","useEffect","createCustomTheme","ThemeProvider","QuickStats2","Box","sx","backgroundColor","p","Grid","container","spacing","item","xs","md","lg","Card","alignItems","display","justifyContent","flexGrow","style","textDecoration","Typography","color","gutterBottom","variant","flexWrap","mr","Avatar","height","width","icon","faSackDollar","component","RouterLink","to","PAGES","LIST_DRIVER","totalDriver","faCar","totalRides","faPersonBiking","LIST_RIDER","totalCustomer","faUsers","subMinutes","Date","subHours","subDays","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","months","currentMonth","getMonth","data","series","categories","labels","slice","concat","datasets","label","OverviewTotalTransactions","useTheme","chartOptions","chart","background","stacked","toolbar","show","colors","dataLabels","enabled","grid","borderColor","palette","divider","xaxis","lines","yaxis","states","active","filter","type","value","hover","legend","stroke","mode","axisBorder","axisTicks","text","secondary","offsetX","chartSeries","CardHeader","subheader","format","title","Scrollbar","minWidth","px","options","Overview","reduxDriver","useSelector","state","UData","drivers","reduxUsers","users","reduxTotalRides","Rides","responseCompletedRides","minHeight","py","Container","maxWidth","compact","Object","values","length"],"mappings":"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","file":"static/js/23.d367cc12.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport useSettings from \"../hooks/useSettings\";\r\nimport { createCustomTheme } from \"../theme\";\r\n\r\nconst WidgetPreviewer = (props) => {\r\n  const { element } = props;\r\n  const { settings } = useSettings();\r\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\r\n\r\n  useEffect(() => {\r\n    setSelectedTheme(settings.theme);\r\n  }, [settings.theme]);\r\n\r\n  const theme = createCustomTheme({\r\n    ...settings,\r\n    theme: selectedTheme,\r\n  });\r\n\r\n  return <ThemeProvider theme={theme}>{element}</ThemeProvider>;\r\n};\r\n\r\nexport default WidgetPreviewer;\r\n","import { Avatar, Box, Card, Grid, Typography } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCar,\r\n  faSackDollar,\r\n  faUsers,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPersonBiking } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { PAGES } from \"../../../constants\";\r\n\r\nconst QuickStats2 = (props) => (\r\n  <Box\r\n    sx={{\r\n      backgroundColor: \"background.default\",\r\n      p: 3,\r\n    }}\r\n  >\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6} lg={3}>\r\n        <Card\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            p: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{ flexGrow: 1 }}\r\n            // component={RouterLink}\r\n            // to={`/${PAGES.LIST_RIDER}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"overline\">\r\n              Total Revenue\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                alignItems: \"center\",\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Typography color=\"textPrimary\" sx={{ mr: 1 }} variant=\"h5\">\r\n                {100}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: \"primary.main\",\r\n              color: \"primary.contrastText\",\r\n              height: 48,\r\n              width: 48,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faSackDollar} />\r\n          </Avatar>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} lg={3}>\r\n        <Card\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            p: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{ flexGrow: 1 }}\r\n            component={RouterLink}\r\n            to={`/${PAGES.LIST_DRIVER}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"overline\">\r\n              Total Drivers\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                alignItems: \"center\",\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Typography color=\"textPrimary\" sx={{ mr: 1 }} variant=\"h5\">\r\n                {props.totalDriver}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: \"primary.main\",\r\n              color: \"primary.contrastText\",\r\n              height: 48,\r\n              width: 48,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faCar} />\r\n          </Avatar>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} lg={3}>\r\n        <Card\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            p: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{ flexGrow: 1 }}\r\n            // component={RouterLink}\r\n            // to={`/${PAGES.LIST_RIDER}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"overline\">\r\n              Total Rides\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                alignItems: \"center\",\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Typography color=\"textPrimary\" sx={{ mr: 1 }} variant=\"h5\">\r\n              {props.totalRides}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: \"primary.main\",\r\n              color: \"primary.contrastText\",\r\n              height: 48,\r\n              width: 48,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faPersonBiking} />\r\n          </Avatar>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} lg={3}>\r\n        <Card\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            p: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{ flexGrow: 1 }}\r\n            component={RouterLink}\r\n            to={`/${PAGES.LIST_RIDER}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"overline\">\r\n              Customers\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                alignItems: \"center\",\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Typography color=\"textPrimary\" sx={{ mr: 1 }} variant=\"h5\">\r\n                {props.totalCustomer}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: \"primary.main\",\r\n              color: \"primary.contrastText\",\r\n              height: 48,\r\n              width: 48,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUsers} />\r\n          </Avatar>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  </Box>\r\n);\r\n\r\nexport default QuickStats2;\r\n","import { formatDistanceToNowStrict, subHours, subMinutes } from \"date-fns\";\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst messages = [\r\n  {\r\n    id: \"b91cbe81ee3efefba6b915a7\",\r\n    content: \"Hello, we spoke earlier on the phone\",\r\n    date: subMinutes(new Date(), 2),\r\n    senderAvatar: \"/static/mock-images/avatars/avatar-alcides_antonio.png\",\r\n    senderName: \"Alcides Antonio\",\r\n  },\r\n  {\r\n    id: \"de0eb1ac517aae1aa57c0b7e\",\r\n    content: \"Is the job still available?\",\r\n    date: subMinutes(new Date(), 56),\r\n    senderAvatar: \"/static/mock-images/avatars/avatar-marcus_finn.png\",\r\n    senderName: \"Marcus Finn\",\r\n  },\r\n  {\r\n    id: \"38e2b0942c90d0ad724e6f40\",\r\n    content: \"What is a screening task? I’d like to\",\r\n    date: subHours(subMinutes(new Date(), 23), 3),\r\n    senderAvatar: \"/static/mock-images/avatars/avatar-carson_darrin.png\",\r\n    senderName: \"Carson Darrin\",\r\n  },\r\n  {\r\n    id: \"467505f3356f25a69f4c4890\",\r\n    content: \"Still waiting for feedback\",\r\n    date: subHours(subMinutes(new Date(), 6), 8),\r\n    senderAvatar: \"/static/mock-images/avatars/avatar-fran_perez.png\",\r\n    senderName: \"Fran Perez\",\r\n  },\r\n  {\r\n    id: \"7e6af808e801a8361ce4cf8b\",\r\n    content: \"Need more information about current campaigns\",\r\n    date: subHours(subMinutes(new Date(), 18), 10),\r\n    senderAvatar: \"/static/mock-images/avatars/avatar-jie_yan_song.png\",\r\n    senderName: \"Jie Yan Song\",\r\n  },\r\n];\r\n\r\nconst OverviewInbox = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader title=\"Inbox\" />\r\n    <List disablePadding>\r\n      {messages.map((message, index) => (\r\n        <Box key={message.id}>\r\n          <ListItem divider={index + 1 < messages.length}>\r\n            <ListItemAvatar>\r\n              <Avatar alt={message.senderName} src={message.senderAvatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              disableTypography\r\n              primary={\r\n                index === 0 ? (\r\n                  <Badge\r\n                    color=\"primary\"\r\n                    sx={{\r\n                      \".MuiBadge-badge\": {\r\n                        right: -16,\r\n                        top: 11,\r\n                      },\r\n                    }}\r\n                    variant=\"dot\"\r\n                  >\r\n                    <Typography color=\"textPrimary\" variant=\"subtitle2\">\r\n                      {message.senderName}\r\n                    </Typography>\r\n                  </Badge>\r\n                ) : (\r\n                  <Typography color=\"textPrimary\" variant=\"subtitle2\">\r\n                    {message.senderName}\r\n                  </Typography>\r\n                )\r\n              }\r\n              secondary={\r\n                <Box\r\n                  sx={{\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    sx={{\r\n                      overflow: \"hidden\",\r\n                      pr: 2,\r\n                      textOverflow: \"ellipsis\",\r\n                      whiteSpace: \"nowrap\",\r\n                    }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {message.content}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    {`${formatDistanceToNowStrict(message.date, {\r\n                      addSuffix: true,\r\n                    })}`}\r\n                  </Typography>\r\n                </Box>\r\n              }\r\n            />\r\n          </ListItem>\r\n        </Box>\r\n      ))}\r\n    </List>\r\n    <CardActions>\r\n      <Button color=\"primary\" variant=\"text\">\r\n        Go to chat\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default OverviewInbox;\r\n","import { format, subDays } from \"date-fns\";\r\nimport numeral from \"numeral\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst transactions = [\r\n  {\r\n    id: \"d46800328cd510a668253b45\",\r\n    amount: 25000,\r\n    currency: \"usd\",\r\n    date: new Date(),\r\n    sender: \"Devias\",\r\n    type: \"receive\",\r\n  },\r\n  {\r\n    id: \"b4b19b21656e44b487441c50\",\r\n    amount: 6843,\r\n    currency: \"usd\",\r\n    date: subDays(new Date(), 1),\r\n    sender: \"Zimbru\",\r\n    type: \"send\",\r\n  },\r\n  {\r\n    id: \"56c09ad91f6d44cb313397db\",\r\n    amount: 91823,\r\n    currency: \"usd\",\r\n    date: subDays(new Date(), 1),\r\n    sender: \"Vertical Jelly\",\r\n    type: \"send\",\r\n  },\r\n  {\r\n    id: \"aaeb96c5a131a55d9623f44d\",\r\n    amount: 49550,\r\n    currency: \"usd\",\r\n    date: subDays(new Date(), 3),\r\n    sender: \"Devias\",\r\n    type: \"receive\",\r\n  },\r\n];\r\n\r\nconst OverviewLatestTransactions = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader title=\"Latest Transactions\" />\r\n    <Table>\r\n      <TableBody>\r\n        {transactions.map((transaction) => (\r\n          <TableRow\r\n            key={transaction.id}\r\n            sx={{\r\n              \"&:last-child td\": {\r\n                border: 0,\r\n              },\r\n            }}\r\n          >\r\n            <TableCell width={100}>\r\n              <Box sx={{ p: 1 }}>\r\n                <Typography\r\n                  align=\"center\"\r\n                  color=\"textSecondary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {format(transaction.date, \"LLL\").toUpperCase()}\r\n                </Typography>\r\n                <Typography align=\"center\" color=\"textSecondary\" variant=\"h6\">\r\n                  {format(transaction.date, \"d\")}\r\n                </Typography>\r\n              </Box>\r\n            </TableCell>\r\n            <TableCell>\r\n              <div>\r\n                <Typography color=\"textPrimary\" variant=\"subtitle2\">\r\n                  {transaction.sender}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" variant=\"body2\">\r\n                  {transaction.type === \"receive\"\r\n                    ? \"Payment received\"\r\n                    : \"Payment sent\"}\r\n                </Typography>\r\n              </div>\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n              <Typography\r\n                color={\r\n                  transaction.type === \"receive\" ? \"success.main\" : \"error.main\"\r\n                }\r\n                variant=\"subtitle2\"\r\n              >\r\n                {transaction.type === \"receive\" ? \"+\" : \"-\"}{\" \"}\r\n                {numeral(transaction.amount).format(\"$0,0.00\")}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" variant=\"body2\">\r\n                {transaction.currency.toUpperCase()}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </Card>\r\n);\r\n\r\nexport default OverviewLatestTransactions;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst ArrowRight = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'ArrowRight'\r\n);\r\n\r\nexport default ArrowRight;\r\n","import Chart from \"react-apexcharts\";\r\nimport { format } from \"date-fns\";\r\nimport { Box, Card, CardHeader, Typography } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Scrollbar from \"../../Scrollbar\";\r\n\r\nlet months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\nlet currentMonth = new Date().getMonth();\r\nvar profitChart = {\r\n  labels: months\r\n    .slice(currentMonth - 11)\r\n    .concat(months.slice(0, currentMonth + 1)),\r\n  datasets: [\r\n    {\r\n      label: \"Profit\",\r\n    },\r\n  ],\r\n};\r\nconst data = {\r\n  series: [\r\n    {\r\n      data: [2, 4, 6, 8, 8, 10, 12, 13, 14, 15, 16, 20],\r\n    },\r\n  ],\r\n  categories: profitChart.labels,\r\n};\r\n\r\nconst OverviewTotalTransactions = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: \"transparent\",\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n    colors: [\"#2DD36F\"],\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      xaxis: {\r\n        lines: {\r\n          show: true,\r\n        },\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: true,\r\n        },\r\n      },\r\n    },\r\n    states: {\r\n      active: {\r\n        filter: {\r\n          type: \"darken\",\r\n          value: 0.35,\r\n        },\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: 'lighten',\r\n          value: 0.15,\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      colors: [\"transparent\"],\r\n      show: true,\r\n      width: 2,\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode,\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      categories: data.categories,\r\n      labels: {\r\n        style: {\r\n          colors: theme.palette.text.secondary,\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        offsetX: -12,\r\n        style: {\r\n          colors: theme.palette.text.secondary,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartSeries = data.series;\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader\r\n        subheader={\r\n          <Typography color=\"textSecondary\" variant=\"body2\">\r\n            {format(new Date(), \"MMM yyyy\")}\r\n          </Typography>\r\n        }\r\n        title=\"LAST 12 MONTH REVENUE\"\r\n      />\r\n      <Scrollbar>\r\n        <Box\r\n          sx={{\r\n            height: 380,\r\n            minWidth: 600,\r\n            px: 2,\r\n          }}\r\n        >\r\n          <Chart\r\n            height=\"350\"\r\n            options={chartOptions}\r\n            series={chartSeries}\r\n            type=\"bar\"\r\n          />\r\n        </Box>\r\n      </Scrollbar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OverviewTotalTransactions;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst ChevronUp = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'ChevronUp'\r\n);\r\n\r\nexport default ChevronUp;\r\n","import WidgetPreviewer from \"../../components/WidgetPreviewer\";\r\nimport QuickStats2 from \"../../components/widgets/quick-stats/QuickStats2\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Box, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport { OverviewTotalTransactions } from \"../../components/dashboard/overview\";\r\nimport useSettings from \"../../hooks/useSettings\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Overview = () => {\r\n  const { settings } = useSettings();\r\n  const reduxDriver = useSelector((state) => state.UData.drivers);\r\n  const reduxUsers = useSelector((state) => state.UData.users);\r\n  const reduxTotalRides = useSelector((state) => state.Rides.responseCompletedRides);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Overview | Hopon Admin</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 8,\r\n        }}\r\n      >\r\n        <Container maxWidth={settings.compact ? \"xl\" : false}>\r\n          <Grid container spacing={3}>\r\n            <Grid\r\n              alignItems=\"center\"\r\n              container\r\n              justifyContent=\"space-between\"\r\n              spacing={3}\r\n              item\r\n              xs={12}\r\n            >\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h5\">\r\n                  Dashboard\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={11} xs={12}>\r\n              <WidgetPreviewer\r\n                element={\r\n                  <QuickStats2\r\n                    totalDriver={Object.values(reduxDriver).length}\r\n                    totalCustomer={Object.values(reduxUsers).length}\r\n                    totalRides={Object.values(reduxTotalRides).length}\r\n                  />\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item md={11} xs={12}>\r\n              <OverviewTotalTransactions />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n"],"sourceRoot":""}