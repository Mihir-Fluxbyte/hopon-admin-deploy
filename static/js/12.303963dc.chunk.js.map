{"version":3,"sources":["components/dashboard/payment/paymentPopUp.js","components/dashboard/payment/PaymentListTable.js","images/small.png","components/dashboard/payment/PaymentPDF.js","components/dashboard/payment/PaymentPreview.js","pages/dashboard/PaymentList.js"],"names":["PaymentPopup","props","handleClose","open","primaryColor","propRideData","reduxDriver","useSelector","state","UData","drivers","useState","amount","setAmount","dispatch","useDispatch","useEffect","amountToBePaid","PaymentToDriver","a","initiatePayment","paidTo","amountPaid","parseFloat","rideRequestIds","tipRideRequestIds","PaymentActions","setPaymentStatus","paidAt","Date","toLocaleDateString","status","toast","success","console","error","response","data","message","handleConfirm","reset","totalTipAmount","Number","log","Dialog","onClose","aria-labelledby","aria-describedby","sx","zIndex","Container","maxWidth","display","flexDirection","justifyContent","height","width","padding","Box","Typography","color","variant","marginTop","TextField","id","label","types","fullWidth","disabled","defaultValue","firstName","lastName","onChange","event","target","value","Button","onClick","backgroundColor","ml","autoFocus","statusOptions","InvoiceListTable","invoices","other","page","setPage","rideData","setRideData","limit","setLimit","query","setQuery","openPaymentPopUp","setOpenPaymentPopUp","filters","setFilters","getPayments","getAllPayments","filteredInvoices","filter","invoice","matches","containsQuery","forEach","property","helper","toString","toLowerCase","includes","applyFilters","paginatedInvoices","slice","applyPagination","Card","CardHeader","title","Divider","alignItems","flexWrap","m","p","InputProps","startAdornment","InputAdornment","position","Search","fontSize","placeholder","name","prevFilters","select","SelectProps","native","map","statusOption","style","marginLeft","Sync","Scrollbar","Table","TableHead","TableRow","TableCell","TableBody","length","align","colSpan","payments","undefined","Link","underline","split","join","component","RouterLink","to","PAGES","DRIVER_DETAILS","replace","GHS","className","totalRideAmount","numeral","format","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","styles","StyleSheet","create","h4","fontWeight","lineHeight","h6","subtitle2","body2","gutterBottom","marginBottom","header","brand","company","references","billing","items","notes","table","tableHeader","tableBody","tableRow","borderBottomWidth","borderColor","borderStyle","tableCell1","tableCellN","alignRight","textAlign","PaymentPDF","size","source","Logo","dueDate","issueDate","number","item","description","unitAmount","currency","subtotalAmount","taxAmount","totalAmount","InvoicePreview","Paper","minWidth","Grid","container","src","objectFit","my","customer","taxId","address","InvoiceList","settings","useSettings","reduxPaymentList","Payments","responsePayments","minHeight","py","compact","spacing","aria-label","separator","mt"],"mappings":"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","file":"static/js/12.303963dc.chunk.js","sourcesContent":["import { Dialog, Container, Box, Typography, Button, TextField } from \"@material-ui/core\";\r\nimport { reset } from \"numeral\";\r\nimport { useEffect, useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { initiatePayment } from \"../../../api/PaymentsApi\";\r\nimport { PaymentActions } from \"../../../slices/Payments\";\r\n\r\nconst PaymentPopup = (props) => {\r\n    const { handleClose, open, primaryColor, propRideData } = props;\r\n    const reduxDriver = useSelector((state) => state.UData.drivers);\r\n    const [amount, setAmount] = useState();\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        setAmount(propRideData?.amountToBePaid)\r\n    }, [propRideData])\r\n\r\n    const handleOnChange = (event) => {\r\n        if (event.target.value) { setAmount(event.target.value) }\r\n    };\r\n\r\n    const PaymentToDriver = async () => {\r\n        try {\r\n            await initiatePayment({\r\n                paidTo: propRideData?.paidTo,\r\n                amountPaid: parseFloat(amount),\r\n                amountToBePaid: propRideData?.amountToBePaid,\r\n                rideRequestIds: propRideData?.rideRequestIds,\r\n                tipRideRequestIds: propRideData?.tipRideRequestIds\r\n            });\r\n            dispatch(\r\n                PaymentActions.setPaymentStatus({\r\n                    paidTo: propRideData?.paidTo,\r\n                    amountPaid: propRideData?.amountPaid,\r\n                    amountToBePaid: propRideData?.amountToBePaid,\r\n                    rideRequestIds: propRideData?.rideRequestIds,\r\n                    tipRideRequestIds:propRideData?.tipRideRequestIds,\r\n                    paidAt: new Date().toLocaleDateString('en-US'),\r\n                    status: \"initiated\"\r\n                }))\r\n            toast.success(\"Payment initiated!\");\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(error.response.data.message);\r\n        }\r\n    };\r\n\r\n    const handleConfirm = async () => {\r\n        if ((propRideData?.amountToBePaid) < amount) {\r\n            toast.error(\"Amount cannot be more than total amount to be paid!\");\r\n            setAmount(reset);\r\n        } \r\n        else if((propRideData?.totalTipAmount) > Number(amount)){\r\n            console.log(propRideData, amount)\r\n            toast.error(\"Amount cannot be lesser than total tip amount!\");\r\n            setAmount(reset);\r\n        }\r\n        else {\r\n            await PaymentToDriver();\r\n            setAmount(reset);\r\n            handleClose();\r\n        }\r\n    };\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={() => handleClose()}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            sx={{ zIndex: 1320 }}>\r\n            <Container\r\n                maxWidth=\"sm\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"space-evenly\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                    padding: \"20px\"\r\n                }}>\r\n                <Box\r\n                    sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <Typography color=\"textPrimary\" variant=\"h5\"> {\"Confirm payment\"} </Typography>\r\n                </Box>\r\n                <Box sx={{marginTop:'10px'}}>\r\n                    <TextField\r\n                        id=\"driverId\"\r\n                        label=\"Driver Name\"\r\n                        types=\"string\"\r\n                        fullWidth\r\n                        disabled\r\n                        variant=\"standard\"\r\n                        defaultValue={reduxDriver[propRideData?.paidTo]?.firstName + ' ' + reduxDriver[propRideData?.paidTo]?.lastName}\r\n                    >\r\n                    </TextField>\r\n                </Box>\r\n                <Box sx={{marginTop:'10px'}}>\r\n                    <TextField\r\n                        id=\"amountToBePaid\"\r\n                        label=\"Amount To Be Paid\"\r\n                        types=\"number\"\r\n                        fullWidth\r\n                        disabled\r\n                        variant=\"standard\"\r\n                        defaultValue={propRideData?.amountToBePaid}\r\n                    >\r\n                    </TextField>\r\n                </Box>\r\n                <Box sx={{marginTop:'10px'}}>\r\n                    <TextField\r\n                        id=\"amount\"\r\n                        label=\"Enter Amount\"\r\n                        types=\"number\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        onChange={handleOnChange}\r\n                        defaultValue={amount}\r\n                    >\r\n                    </TextField>\r\n                </Box>\r\n                <Box\r\n                    sx={{ display: \"flex\", justifyContent: \"flex-end\", marginTop:'10px'}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => handleClose()}\r\n                        color=\"error\"\r\n                        sx={{ \":hover\": { color: \"red\" } }}>\r\n                        {\"Cancel\"}\r\n                    </Button>\r\n                    <Button\r\n                        sx={{\r\n                            backgroundColor: `${primaryColor ? \"\" : \"primary.main\"}`,\r\n                            \"&:hover\": { color: \"white\", backgroundColor: `${primaryColor ? \"\" : \"primary.main\"}` }, ml: 2,\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={handleConfirm}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        {\"Pay\"}\r\n                    </Button>\r\n                </Box>\r\n            </Container>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default PaymentPopup;","import { useState } from \"react\";\r\nimport numeral from \"numeral\";\r\nimport toast from \"react-hot-toast\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as helper from \"../../common/helper\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  InputAdornment,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Link,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"../../../icons/Search\";\r\nimport PaymentPopup from \"./paymentPopUp\";\r\nimport Scrollbar from \"../../Scrollbar\";\r\nimport { PAGES } from \"../../../constants\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport GHS from \"../../../icons/GHS\";\r\nimport { Sync } from \"@material-ui/icons\";\r\nimport { getAllPayments } from \"../../../api/PaymentsApi\";\r\nimport { PaymentActions } from \"../../../slices/Payments\";\r\n\r\nconst statusOptions = [\r\n  {\r\n    label: \"All\",\r\n    value: \"all\",\r\n  },\r\n  {\r\n    label: \"Success\",\r\n    value: \"success\",\r\n  },\r\n  {\r\n    label: \"Pending\",\r\n    value: \"pending\",\r\n  }\r\n];\r\n\r\nconst applyFilters = (invoices, query, filters) =>\r\n  invoices.filter((invoice) => {\r\n    let matches = true;\r\n\r\n    if (query) {\r\n      const properties = [\"status\"];\r\n      let containsQuery = false;\r\n\r\n      properties.forEach((property) => {\r\n        let value = helper.get_object_value(invoice, property, \"\").toString();\r\n        if (value && value.toLowerCase().includes(query.toLowerCase())) {\r\n          containsQuery = true;\r\n        }\r\n      });\r\n\r\n      if (!containsQuery) {\r\n        matches = false;\r\n      }\r\n    }\r\n\r\n    if (filters.status && invoice.status !== filters.status) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n\r\nconst applyPagination = (invoices, page, limit) =>\r\n  invoices.slice(page * limit, page * limit + limit);\r\n\r\nconst InvoiceListTable = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { invoices, ...other } = props;\r\n  const [page, setPage] = useState(0);\r\n  const [rideData, setRideData] = useState();\r\n  const [limit, setLimit] = useState(10);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [openPaymentPopUp, setOpenPaymentPopUp] = useState(false);\r\n  const [filters, setFilters] = useState({ status: null });\r\n\r\n  const handleQueryChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleStatusChange = (event) => {\r\n    let value = null;\r\n\r\n    if (event.target.value !== \"all\") {\r\n      value = event.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value,\r\n    }));\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handlePaymentPopup = (data) => {\r\n    setRideData(data);\r\n    setOpenPaymentPopUp(true);\r\n  };\r\n  const handleCancelPaymentPopUp = () => {\r\n    setOpenPaymentPopUp(false);\r\n  };\r\n\r\n  const getPayments = async () => {\r\n    try {\r\n      const response = await getAllPayments();\r\n      dispatch(PaymentActions.getPayments(response))\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\");\r\n    };\r\n  };\r\n\r\n  const handlePaymentSync = () => {\r\n    getPayments();\r\n  };\r\n\r\n  const filteredInvoices = applyFilters(invoices, query, filters);\r\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\r\n\r\n  return (\r\n    <>\r\n      <Card {...other}>\r\n        <CardHeader title=\"Payments\" />\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            m: -1,\r\n            p: 2,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              m: 1,\r\n              maxWidth: \"100%\",\r\n              width: 400,\r\n            }}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={handleQueryChange}\r\n              placeholder=\"Search Payment by Admin\"\r\n              value={query}\r\n              variant=\"outlined\"\r\n            />\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              m: 1,\r\n              maxWidth: \"100%\",\r\n              width: 240,\r\n            }}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              label=\"Status\"\r\n              name=\"status\"\r\n              onChange={handleStatusChange}\r\n              select\r\n              SelectProps={{ native: true }}\r\n              value={filters.status || \"all\"}\r\n              variant=\"outlined\"\r\n            >\r\n              {statusOptions.map((statusOption) => (\r\n                <option key={statusOption.value} value={statusOption.value}>\r\n                  {statusOption.label}\r\n                </option>\r\n              ))}\r\n            </TextField>\r\n          </Box>\r\n          <Box style={{marginLeft : 'auto'}}>\r\n            <Button onClick={handlePaymentSync}>\r\n              <Sync />\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Scrollbar>\r\n          <Box>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Payment Id</TableCell>\r\n                  <TableCell>Ride Request Ids</TableCell>\r\n                  <TableCell>Tip Request Ids</TableCell>\r\n                  <TableCell>Paid To</TableCell>\r\n                  <TableCell>Total Ride Amount</TableCell>\r\n                  <TableCell>Total Tip Amount</TableCell>\r\n                  <TableCell>Amount To Be Paid</TableCell>\r\n                  <TableCell>Amount Paid</TableCell>\r\n                  <TableCell>Paid At</TableCell>\r\n                  <TableCell>Payment</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {paginatedInvoices.length === 0 ? (<TableCell align={'center'} colSpan={'100%'}>No Records Found</TableCell>)\r\n                  : paginatedInvoices.map((payments) => {\r\n                    return (\r\n                      <TableRow key={payments.rideRequestIds}>\r\n                        {((payments.id) === undefined) || ((payments.id) === null)\r\n                          ? <TableCell>-</TableCell>\r\n                          : <TableCell>{`${payments?.id}`}</TableCell>\r\n                        }\r\n                        <TableCell>\r\n                          <Link\r\n                            color=\"textPrimary\"\r\n                            // component={RouterLink}\r\n                            // to={`/${PAGES.PAYMENT_DETAILS.replace(\r\n                            //   \":id\",\r\n                            //   payments.rideRequestIds\r\n                            // )}`}\r\n                            underline=\"none\"\r\n                            variant=\"subtitle2\" >\r\n                            {payments?.rideRequestIds\r\n                              ? `${(payments?.rideRequestIds).split(',').join(', ')}`\r\n                              : ''\r\n                            }\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        <Link\r\n                            color=\"textPrimary\"\r\n                            // component={RouterLink}\r\n                            // to={`/${PAGES.PAYMENT_DETAILS.replace(\r\n                            //   \":id\",\r\n                            //   payments.rideRequestIds\r\n                            // )}`}\r\n                            underline=\"none\"\r\n                            variant=\"subtitle2\" >\r\n                            {payments?.tipRideRequestIds\r\n                              ? `${(payments?.tipRideRequestIds).split(',').join(', ')}`\r\n                              : ''}\r\n\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Link\r\n                            color=\"inherit\"\r\n                            component={RouterLink}\r\n                            to={`/${PAGES.DRIVER_DETAILS.replace(\r\n                              \":id\",\r\n                              payments.paidTo\r\n                            )}`}\r\n                          >\r\n                            {payments.paidTo}\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        <GHS className='small' />\r\n                          {`${payments?.totalRideAmount}`}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        <GHS className='small' /> \r\n                          {`${payments?.totalTipAmount}`}\r\n                        </TableCell>\r\n                        <TableCell><GHS className='small' />{numeral(payments?.amountToBePaid).format(`${payments.amountToBePaid}0,0.00`)}</TableCell>\r\n                        <TableCell><GHS className='small' />{numeral(payments?.amountPaid).format(`${payments.amountPaid}0,0.00`)}</TableCell>\r\n                        {(payments.paidAt) === null\r\n                          ? <TableCell>-</TableCell>\r\n                          : <TableCell>{`${new Date(payments?.paidAt).toLocaleDateString('en-US')}`}</TableCell>\r\n                        }\r\n                        {(payments.status) === 'pending'\r\n                          ? <TableCell><Button onClick={() => { handlePaymentPopup(payments) }}>{(payments.status)}</Button></TableCell>\r\n                          : <TableCell><Button disabled>{(payments.status)}</Button></TableCell>\r\n                        }\r\n                      </TableRow>\r\n                    )\r\n                  })\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </Box>\r\n        </Scrollbar>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={filteredInvoices.length}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n        />\r\n      </Card>\r\n      <PaymentPopup\r\n        open={openPaymentPopUp}\r\n        handleClose={handleCancelPaymentPopUp}\r\n        propRideData={rideData}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nInvoiceListTable.propTypes = {\r\n  invoices: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default InvoiceListTable;\r\n","export default __webpack_public_path__ + \"static/media/small.20388b6d.png\";","import PropTypes from \"prop-types\";\r\nimport { format } from \"date-fns\";\r\nimport numeral from \"numeral\";\r\nimport Logo from \"../../../images/small.png\";\r\nimport {\r\n  Document,\r\n  Page,\r\n  View,\r\n  Text,\r\n  Image,\r\n  StyleSheet,\r\n} from \"@react-pdf/renderer\";\r\n\r\nconst COL1_WIDTH = 60;\r\nconst COLN_WIDTH = (100 - COL1_WIDTH) / 2;\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    backgroundColor: \"#ffffff\",\r\n    padding: 24,\r\n  },\r\n  h4: {\r\n    fontSize: 14,\r\n    fontWeight: 600,\r\n    lineHeight: 1.235,\r\n  },\r\n  h6: {\r\n    fontSize: 12,\r\n    fontWeight: 600,\r\n    lineHeight: 1.6,\r\n  },\r\n  subtitle2: {\r\n    fontSize: 10,\r\n    fontWeight: 500,\r\n    lineHeight: 1.57,\r\n  },\r\n  body2: {\r\n    fontSize: 10,\r\n    lineHeight: 1.43,\r\n  },\r\n  gutterBottom: {\r\n    marginBottom: 4,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  brand: {\r\n    height: 32,\r\n    width: 32,\r\n  },\r\n  company: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 32,\r\n  },\r\n  references: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 32,\r\n  },\r\n  billing: {\r\n    marginTop: 32,\r\n  },\r\n  items: {\r\n    marginTop: 32,\r\n  },\r\n  notes: {\r\n    marginTop: 32,\r\n  },\r\n  table: {\r\n    display: \"flex\",\r\n    width: \"auto\",\r\n  },\r\n  tableHeader: {},\r\n  tableBody: {},\r\n  tableRow: {\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#EEEEEE\",\r\n    borderStyle: \"solid\",\r\n    flexDirection: \"row\",\r\n  },\r\n  tableCell1: {\r\n    padding: 6,\r\n    width: `${COL1_WIDTH}%`,\r\n  },\r\n  tableCellN: {\r\n    padding: 6,\r\n    width: `${COLN_WIDTH}%`,\r\n  },\r\n  alignRight: {\r\n    textAlign: \"right\",\r\n  },\r\n});\r\n\r\nconst PaymentPDF = (props) => {\r\n  const { invoice } = props;\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <View style={styles.header}>\r\n          <View\r\n            style={{ display: \"inlineBlock\", height: \"100px\", width: \"100px\" }}\r\n          >\r\n            <Image source={Logo} style={styles.brand} />\r\n            <Text style={styles.h6}>www.hopon.io</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.h4}>{invoice.status}</Text>\r\n            <Text style={styles.subtitle2}>#3593865</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.company}>\r\n          <View>\r\n            <Text style={styles.body2}>Street King William, 123</Text>\r\n            <Text style={styles.body2}>Level 2, C, 442456</Text>\r\n            <Text style={styles.body2}>San Francisco, CA, USA</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.body2}>Company No. 4675933</Text>\r\n            <Text style={styles.body2}>EU VAT No. 949 67545 45</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.body2}>accounts@devias.io</Text>\r\n            <Text style={styles.body2}>(+40) 652 3456 23</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.references}>\r\n          <View>\r\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\r\n              Due Date\r\n            </Text>\r\n            <Text style={styles.body2}>\r\n              {format(invoice.dueDate, \"dd MMM yyyy\")}\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\r\n              Date of issue\r\n            </Text>\r\n            <Text style={styles.body2}>\r\n              {format(invoice.issueDate, \"dd MMM yyyy\")}\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>Number</Text>\r\n            <Text style={styles.body2}>{invoice.number}</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.billing}>\r\n          <Text style={[styles.subtitle2, styles.gutterBottom]}>Billed to</Text>\r\n          <Text style={styles.body2}>Tracey Herman</Text>\r\n          <Text style={styles.body2}>Countdown Grey Lynn</Text>\r\n          <Text style={styles.body2}>6934656584231</Text>\r\n          <Text style={styles.body2}>\r\n            271 Richmond Rd, Grey Lynn, Auckland 1022, New Zealand\r\n          </Text>\r\n        </View>\r\n        <View style={styles.items}>\r\n          <View style={styles.table}>\r\n            <View style={styles.tableHeader}>\r\n              <View style={styles.tableRow}>\r\n                <View style={styles.tableCell1}>\r\n                  <Text style={styles.h6}>Description</Text>\r\n                </View>\r\n                <View style={styles.tableCellN} />\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={[styles.h6, styles.alignRight]}>Price</Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View style={styles.tableBody}>\r\n              {invoice.items.map((item) => (\r\n                <View style={styles.tableRow} key={item.id}>\r\n                  <View style={styles.tableCell1}>\r\n                    <Text style={styles.body2}>{item.description}</Text>\r\n                  </View>\r\n                  <View style={styles.tableCellN} />\r\n                  <View style={styles.tableCellN}>\r\n                    <Text style={[styles.body2, styles.alignRight]}>\r\n                      {numeral(item.unitAmount).format(\r\n                        `${item.currency}0,0.00`\r\n                      )}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              ))}\r\n              <View style={styles.tableRow}>\r\n                <View style={styles.tableCell1} />\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={styles.body2}>Subtotal</Text>\r\n                </View>\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={[styles.body2, styles.alignRight]}>\r\n                    {numeral(invoice.subtotalAmount).format(\r\n                      `${invoice.currency}0,0.00`\r\n                    )}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.tableRow}>\r\n                <View style={styles.tableCell1} />\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={styles.body2}>Taxes</Text>\r\n                </View>\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={[styles.body2, styles.alignRight]}>\r\n                    {numeral(invoice.taxAmount).format(\r\n                      `${invoice.currency}0,0.00`\r\n                    )}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.tableRow}>\r\n                <View style={styles.tableCell1} />\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={styles.body2}>Total</Text>\r\n                </View>\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={[styles.body2, styles.alignRight]}>\r\n                    {numeral(invoice.totalAmount).format(\r\n                      `${invoice.currency}0,0.00`\r\n                    )}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nPaymentPDF.propTypes = {\r\n  invoice: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PaymentPDF;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport PropTypes from \"prop-types\";\r\nimport { format } from \"date-fns\";\r\nimport numeral from \"numeral\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Logo from \"../../../images/small.png\";\r\nimport Scrollbar from \"../../Scrollbar\";\r\n\r\nconst InvoicePreview = (props) => {\r\n  const { invoice, ...other } = props;\r\n\r\n  return (\r\n    <Paper {...other}>\r\n      <Scrollbar>\r\n        <Box\r\n          sx={{\r\n            minWidth: 800,\r\n            p: 6,\r\n          }}\r\n        >\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid\r\n              item\r\n              style={{ display: \"inlineBlock\", height: \"50px\", width: \"100px\" }}\r\n            >\r\n              <img\r\n                src={Logo}\r\n                style={{ height: \"100%\", width: \"100%\", objectFit: \"cover\" }}\r\n              />\r\n              <Typography color=\"textPrimary\" variant=\"h6\">\r\n                www.hopon.io\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography align=\"right\" color=\"textPrimary\" variant=\"h4\">\r\n                {invoice.status}\r\n              </Typography>\r\n              <Typography align=\"right\" color=\"textPrimary\" variant=\"subtitle2\">\r\n                #3593865\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ my: 4 }}>\r\n            <Grid container justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"body2\">\r\n                  Street King William, 123\r\n                  <br />\r\n                  Level 2, C, 442456\r\n                  <br />\r\n                  San Francisco, CA, USA\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"body2\">\r\n                  Company No. 4675933\r\n                  <br />\r\n                  EU VAT No. 949 67545 45\r\n                  <br />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography align=\"right\" color=\"textPrimary\" variant=\"body2\">\r\n                  accounts@devias.io\r\n                  <br />\r\n                  (+40) 652 3456 23\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box sx={{ my: 4 }}>\r\n            <Grid container justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Due date\r\n                </Typography>\r\n                <Typography color=\"textPrimary\" variant=\"body2\">\r\n                  {format(invoice.dueDate, \"dd MMM yyyy\")}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Date of issue\r\n                </Typography>\r\n                <Typography color=\"textPrimary\" variant=\"body2\">\r\n                  {format(invoice.issueDate, \"dd MMM yyyy\")}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Number\r\n                </Typography>\r\n                <Typography color=\"textPrimary\" variant=\"body2\">\r\n                  {invoice.number}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box sx={{ my: 4 }}>\r\n            <Typography color=\"textPrimary\" gutterBottom variant=\"subtitle2\">\r\n              Billed to\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"body2\">\r\n              {invoice.customer.name}\r\n              <br />\r\n              {invoice.customer.company}\r\n              <br />\r\n              {invoice.customer.taxId}\r\n              <br />\r\n              {invoice.customer.address}\r\n            </Typography>\r\n          </Box>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell />\r\n                <TableCell align=\"right\">Unit Price</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {invoice.items.map((items) => (\r\n                <TableRow key={items.id}>\r\n                  <TableCell>{items.description}</TableCell>\r\n                  <TableCell />\r\n                  <TableCell align=\"right\">\r\n                    {numeral(items.unitAmount).format(\r\n                      `${items.currency}0,0.00`\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    Subtotal\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {numeral(invoice.subtotalAmount).format(\r\n                    `${invoice.currency}0,0.00`\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    Taxes\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {numeral(invoice.taxAmount).format(\r\n                    `${invoice.currency}0,0.00`\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    Total\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {numeral(invoice.totalAmount).format(\r\n                    `${invoice.currency}0,0.00`\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </Scrollbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nInvoicePreview.propTypes = {\r\n  invoice: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InvoicePreview;\r\n","import { Link as RouterLink } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { InvoiceListTable } from \"../../components/dashboard/payment\";\r\nimport useSettings from \"../../hooks/useSettings\";\r\nimport ChevronRightIcon from \"../../icons/ChevronRight\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst InvoiceList = () => {\r\n  const { settings } = useSettings();  \r\n  const reduxPaymentList = useSelector((state) => state.Payments.responsePayments);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Payment | Hopon Admin</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 8,\r\n        }}\r\n      >\r\n        <Container maxWidth={settings.compact ? \"xl\" : false}>\r\n          <Grid container justifyContent=\"space-between\" spacing={3}>\r\n            <Grid item>\r\n              <Typography color=\"textPrimary\" variant=\"h5\">\r\n                Payments\r\n              </Typography>\r\n              <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/payments\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Payment Management\r\n                </Link>\r\n                <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                  Payment\r\n                </Typography>\r\n              </Breadcrumbs>\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ mt: 3 }}>\r\n            <InvoiceListTable invoices={reduxPaymentList} />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvoiceList;\r\n"],"sourceRoot":""}