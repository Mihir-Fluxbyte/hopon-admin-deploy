{"version":3,"sources":["lib/gtm.js","pages/ServerError.js"],"names":["gtm","this","CONTAINER_ID","initialized","config","containerId","document","configure","script","createElement","noscript","innerHTML","head","insertBefore","childNodes","body","window","dataLayer","push","ServerError","theme","useTheme","mobileDevice","useMediaQuery","breakpoints","down","useEffect","event","sx","alignItems","backgroundColor","display","minHeight","px","py","maxWidth","align","color","variant","mt","justifyContent","alt","component","src","palette","mode","height","width","RouterLink","to"],"mappings":"+KA4EMA,EAAM,I,WAnEV,aAAe,oBACbC,KAAKC,aAAe,KAEpBD,KAAKE,aAAc,E,6CAGrB,SAAUC,GACRH,KAAKC,aAAeE,EAAOC,c,wBAG7B,SAAWD,GACT,IAAIH,KAAKE,aAUJG,UAKAF,EAAOC,YAAZ,CAKAJ,KAAKM,UAAUH,GAEf,IAAMI,EAASF,SAASG,cAAc,UAChCC,EAAWJ,SAASG,cAAc,YAExCD,EAAOG,UAAP,2XAK6CV,KAAKC,aALlD,aAOAQ,EAASC,UAAT,2EAC6DV,KAAKC,aADlE,iFAIAI,SAASM,KAAKC,aAAaL,EAAQF,SAASM,KAAKE,WAAW,IAC5DR,SAASS,KAAKF,aAAaH,EAAUJ,SAASS,KAAKD,WAAW,O,kBAIhE,WAAe,IAAD,EACPE,SAKAA,OAAOC,YACVD,OAAOC,UAAY,KAGrB,EAAAD,OAAOC,WAAUC,KAAjB,wB,MAOWlB,O,iCC9Ef,uGAwFemB,UAhFK,WAClB,IAAMC,EAAQC,cACRC,EAAeC,YAAcH,EAAMI,YAAYC,KAAK,OAM1D,OAJAC,qBAAU,WACR1B,IAAIkB,KAAK,CAAES,MAAO,gBACjB,IAGD,qCACE,cAAC,IAAD,UACE,wEAEF,cAAC,IAAD,CACEC,GAAI,CACFC,WAAY,SACZC,gBAAiB,mBACjBC,QAAS,OACTC,UAAW,OACXC,GAAI,EACJC,GAAI,QAPR,SAUE,eAAC,IAAD,CAAWC,SAAS,KAApB,UACE,cAAC,IAAD,CACEC,MAAM,SACNC,MAAM,cACNC,QAAShB,EAAe,KAAO,KAHjC,wCAOA,cAAC,IAAD,CACEc,MAAM,SACNC,MAAM,gBACNT,GAAI,CAAEW,GAAI,IACVD,QAAQ,YAJV,uHASA,cAAC,IAAD,CACEV,GAAI,CACFG,QAAS,OACTS,eAAgB,SAChBD,GAAI,GAJR,SAOE,cAAC,IAAD,CACEE,IAAI,oBACJC,UAAU,MACVC,IAAG,iCAA4BvB,EAAMwB,QAAQC,KAA1C,QACHjB,GAAI,CACFkB,OAAQ,OACRX,SAAU,OACVY,MAAO,SAIb,cAAC,IAAD,CACEnB,GAAI,CACFG,QAAS,OACTS,eAAgB,SAChBD,GAAI,GAJR,SAOE,cAAC,IAAD,CACEF,MAAM,UACNK,UAAWM,IACXC,GAAG,IACHX,QAAQ,WAJV","file":"static/js/19.b90b19e0.chunk.js","sourcesContent":["const warn = (...args) => {\r\n  if (process.env.NODE_ENV !== 'development') {\r\n    return;\r\n  }\r\n\r\n  console.warn(...args);\r\n};\r\n\r\nclass GTM {\r\n  constructor() {\r\n    this.CONTAINER_ID = null;\r\n\r\n    this.initialized = false;\r\n  }\r\n\r\n  configure(config) {\r\n    this.CONTAINER_ID = config.containerId;\r\n  }\r\n\r\n  initialize(config) {\r\n    if (this.initialized) {\r\n      warn('GTM can only be initialized once.');\r\n      return;\r\n    }\r\n\r\n    // Maybe you want to load events from server side (in NextJS apps for example),\r\n    // those can be queued.\r\n    // SSR queued events can be loaded in the initialize script.\r\n    // For the moment we do not implement it, but in future we might add it.\r\n\r\n    if (!document) {\r\n      warn('GTM can be initialized only on client side.');\r\n      return;\r\n    }\r\n\r\n    if (!config.containerId) {\r\n      warn('GTM requires a GTM ID to be loaded.');\r\n      return;\r\n    }\r\n\r\n    this.configure(config);\r\n\r\n    const script = document.createElement('script');\r\n    const noscript = document.createElement('noscript');\r\n\r\n    script.innerHTML = `\r\n      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\r\n        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\r\n        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\r\n        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\r\n      })(window,document,'script','dataLayer','${this.CONTAINER_ID}');\r\n    `;\r\n    noscript.innerHTML = `\r\n      <iframe src=\"https://www.googletagmanager.com/ns.html?id=${this.CONTAINER_ID}\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\r\n    `;\r\n\r\n    document.head.insertBefore(script, document.head.childNodes[0]);\r\n    document.body.insertBefore(noscript, document.body.childNodes[0]);\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  push(...args) {\r\n    if (!window) {\r\n      warn('GTM push works only on client side.');\r\n      return;\r\n    }\r\n\r\n    if (!window.dataLayer) {\r\n      window.dataLayer = [];\r\n    }\r\n\r\n    window.dataLayer.push(...args);\r\n  }\r\n}\r\n\r\n// Singleton\r\nconst gtm = new GTM();\r\n\r\nexport default gtm;\r\n","import { useEffect } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Box, Button, Container, Typography } from \"@material-ui/core\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport gtm from \"../lib/gtm\";\r\n\r\nconst ServerError = () => {\r\n  const theme = useTheme();\r\n  const mobileDevice = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: \"page_view\" });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Error: Server Error | Hopon Admin</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          alignItems: \"center\",\r\n          backgroundColor: \"background.paper\",\r\n          display: \"flex\",\r\n          minHeight: \"100%\",\r\n          px: 3,\r\n          py: \"80px\",\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant={mobileDevice ? \"h4\" : \"h1\"}\r\n          >\r\n            500: Internal Server Error\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textSecondary\"\r\n            sx={{ mt: 0.5 }}\r\n            variant=\"subtitle2\"\r\n          >\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation.\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              mt: 6,\r\n            }}\r\n          >\r\n            <Box\r\n              alt=\"Under development\"\r\n              component=\"img\"\r\n              src={`/static/error/error500_${theme.palette.mode}.svg`}\r\n              sx={{\r\n                height: \"auto\",\r\n                maxWidth: \"100%\",\r\n                width: 400,\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              mt: 6,\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"primary\"\r\n              component={RouterLink}\r\n              to=\"/\"\r\n              variant=\"outlined\"\r\n            >\r\n              Back to Home\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServerError;\r\n"],"sourceRoot":""}