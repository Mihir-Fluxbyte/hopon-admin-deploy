{"version":3,"sources":["icons/Cog.js","components/dashboard/chat/ChatContactSearch.js","components/dashboard/chat/ChatMessage.js","components/dashboard/chat/ChatMessageAdd.js","components/dashboard/chat/ChatMessages.js","utils/deepCopy.js","__fakeApi__/chatApi.js","icons/PencilAlt.js","components/dashboard/chat/ChatThreadToolbar.js","components/dashboard/chat/ChatThread.js","components/dashboard/chat/ChatThreadComposer.js","components/dashboard/chat/ChatThreadItem.js","pages/dashboard/TicketDetails.js"],"names":["Cog","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","ChatContactSearch","forwardRef","props","ref","isFocused","onChange","onClickAway","onFocus","onSelect","query","results","other","displayResults","ClickAwayListener","Box","sx","px","alignItems","backgroundColor","borderRadius","display","height","Search","color","fontSize","flexGrow","ml","Input","fullWidth","disableUnderline","placeholder","value","mt","Typography","variant","List","map","result","ListItem","button","onClick","handleSelect","ListItemAvatar","Avatar","src","avatar","width","ListItemText","primary","name","primaryTypographyProps","noWrap","id","defaultProps","ChatMessage","createdAt","senderType","message","useState","expandMedia","setExpandMedia","mb","flexDirection","maxWidth","boxShadow","py","marginLeft","justifyContent","formatDistanceToNowStrict","Date","large","onClose","ChatMessageAdd","disabled","onSend","ticketId","user","useAuth","body","setBody","reduxTicket","useSelector","state","ticket","handleSend","ticketStatus","flexShrink","xs","mr","TextField","event","target","onKeyUp","code","size","Tooltip","title","IconButton","ChatMessages","senderName","rootRef","useRef","scrollToBottom","current","_container","scrollTop","scrollHeight","useEffect","Scrollbar","options","suppressScrollX","p","messages","participant","sendBy","JSON","parse","localStorage","getItem","ticketMessageId","deepCopy","obj","getTime","Array","reduce","arr","item","i","Object","keys","newObj","key","now","contacts","isActive","lastActivity","username","subHours","subMinutes","subDays","threads","attachments","contentType","senderId","participants","type","unreadCount","findContactByUsername","find","_contact","findThreadById","threadId","_threadId","chatApi","Promise","resolve","reject","foundContacts","cleanQuery","toLowerCase","trim","filter","contact","includes","err","console","error","Error","threadKey","thread","push","participantId","_thread","_participant","recipientIds","participantIds","length","foundParticipantIds","Set","forEach","add","findThreadByParticipantIds","createResourceId","recipientId","ChatThreadToolbar","dispatch","useDispatch","navigate","useNavigate","isResolved","setIsResolved","reduxUsers","UData","users","reduxDrivers","drivers","undefined","userDetail","setUserDetail","createdBy","handleResolved","a","loadingActions","increment","resolveTicketApi","TicketActions","setTicketStatus","status","toast","success","response","data","log","decrement","borderBottom","theme","palette","divider","minHeight","profilePic","getInitials","firstName","lastName","background","fontWeight","Button","ConfirmationModal","open","handleClose","handleConfirm","description","cancleButtonName","confirmButtonName","ChatThread","useParams","idNum","Number","handleSendMessage","sendMessageApi","newMessage","sendMessage","overflow","Divider","ChatThreadComposer","onAddRecipient","onRemoveRecipient","recipients","containerRef","setQuery","isSearchFocused","setIsSearchFocused","searchResults","setSearchResults","filteredSearchResults","acc","recipient","getFilteredSearchResults","handleSearchChange","searchContacts","component","Chip","label","onDelete","onBlur","Popper","anchorEl","placement","Paper","textAlign","gutterBottom","pt","ChatThreadItem","active","details","currentUserId","otherParticipants","displayNames","names","join","displayText","lastMessage","sender","getDetails","main","sm","AvatarGroup","max","secondary","secondaryTypographyProps","minWidth","TicketDetails"],"mappings":"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","file":"static/js/16.3d9fe6c0.chunk.js","sourcesContent":["import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Cog = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Cog'\r\n);\r\n\r\nexport default Cog;\r\n","import { forwardRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  ClickAwayListener,\r\n  Input,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"../../../icons/Search\";\r\n\r\nconst ChatContactSearch = forwardRef((props, ref) => {\r\n  const {\r\n    isFocused,\r\n    onChange,\r\n    onClickAway,\r\n    onFocus,\r\n    onSelect,\r\n    query,\r\n    results,\r\n    ...other\r\n  } = props;\r\n\r\n  const handleSelect = (result) => {\r\n    if (onSelect) {\r\n      onSelect(result);\r\n    }\r\n  };\r\n\r\n  const displayResults = query && isFocused;\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={onClickAway}>\r\n      <Box ref={ref} sx={{ px: 1 }} {...other}>\r\n        <Box\r\n          sx={{\r\n            alignItems: \"center\",\r\n            backgroundColor: \"background.default\",\r\n            borderRadius: 22,\r\n            display: \"flex\",\r\n            height: 44,\r\n            px: 2,\r\n          }}\r\n        >\r\n          <SearchIcon color=\"action\" fontSize=\"small\" />\r\n          <Box\r\n            sx={{\r\n              flexGrow: 1,\r\n              ml: 2,\r\n            }}\r\n          >\r\n            <Input\r\n              fullWidth\r\n              disableUnderline\r\n              onChange={onChange}\r\n              onFocus={onFocus}\r\n              placeholder=\"Search contacts\"\r\n              value={query}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        {displayResults && (\r\n          <Box sx={{ mt: 2 }}>\r\n            <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n              Contacts\r\n            </Typography>\r\n            <List>\r\n              {results.map((result) => (\r\n                <ListItem\r\n                  button\r\n                  key={result.id}\r\n                  onClick={() => handleSelect(result)}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      src={result.avatar}\r\n                      sx={{\r\n                        height: 32,\r\n                        width: 32,\r\n                      }}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={result.name}\r\n                    primaryTypographyProps={{\r\n                      color: \"textPrimary\",\r\n                      noWrap: true,\r\n                      variant: \"subtitle2\",\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </ClickAwayListener>\r\n  );\r\n});\r\n\r\nChatContactSearch.propTypes = {\r\n  isFocused: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  onClickAway: PropTypes.func,\r\n  onFocus: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  query: PropTypes.string,\r\n  results: PropTypes.array,\r\n};\r\n\r\nChatContactSearch.defaultProps = {\r\n  isFocused: false,\r\n  query: \"\",\r\n  results: [],\r\n};\r\n\r\nexport default ChatContactSearch;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatDistanceToNowStrict } from \"date-fns\";\r\nimport { Lightbox } from \"react-modal-image\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst ChatMessage = (props) => {\r\n\r\n  const { createdAt, senderType, message } = props;\r\n  const [expandMedia, setExpandMedia] = useState(false);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        mb: 2,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: senderType === \"user\" ? \"row\" : \"row-reverse\",\r\n          maxWidth: 500,\r\n          ml: senderType === \"user\" ? 0 : \"auto\",\r\n        }}\r\n      >\r\n        <div>\r\n          <Box\r\n            sx={{\r\n              backgroundColor:\r\n                senderType === \"user\" ? \"background.paper\" : \"primary.main\",\r\n              borderRadius: 3,\r\n              boxShadow: 1,\r\n              color:\r\n                senderType === \"user\" ? \"text.primary\" : \"primary.contrastText\",\r\n              px: 2,\r\n              py: 1,\r\n              width: \"fit-content\",\r\n              marginLeft: \r\n                senderType === \"user\" ? \"\" : \"auto\",\r\n            }}\r\n          >\r\n            {message}\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: senderType === \"user\" ? \"flex-start\" : \"flex-end\",\r\n              mt: 1,\r\n              px: 2,\r\n            }}\r\n          >\r\n            <Typography color=\"textSecondary\" variant=\"caption\">\r\n              {formatDistanceToNowStrict(new Date(createdAt))} ago\r\n            </Typography>\r\n          </Box>\r\n        </div>\r\n      </Box>\r\n      {expandMedia && (\r\n        <Lightbox large={\"body\"} onClose={() => setExpandMedia(true)} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nChatMessage.propTypes = {\r\n  body: PropTypes.string,\r\n  contentType: PropTypes.string,\r\n  createdAt: PropTypes.number,\r\n  senderAvatar: PropTypes.string,\r\n  senderName: PropTypes.string,\r\n};\r\n\r\nexport default ChatMessage;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { useSelector } from \"../../../store\";\r\n\r\nconst ChatMessageAdd = (props) => {\r\n  const { disabled, onSend, ticketId, ...other } = props;\r\n  // const fileInputRef = useRef(null);\r\n  const { user } = useAuth();\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const reduxTicket = useSelector((state) => state.ticket.ticket);\r\n\r\n  // const handleAttach = () => {\r\n  //   fileInputRef.current.click();\r\n  // };\r\n\r\n  const handleChange = (event) => {\r\n    setBody(event.target.value);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (!body) {\r\n      return;\r\n    }\r\n\r\n    onSend(body);\r\n    setBody(\"\");\r\n  };\r\n\r\n  const handleKeyUp = (event) => {\r\n    if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {reduxTicket[ticketId]?.ticketStatus === 1 ? (\r\n        <Box\r\n          sx={{\r\n            alignItems: \"center\",\r\n            backgroundColor: \"background.paper\",\r\n            display: \"flex\",\r\n            flexShrink: 0,\r\n            px: 2,\r\n            py: 1,\r\n          }}\r\n          {...other}\r\n        >\r\n          <Avatar\r\n            sx={{\r\n              display: {\r\n                xs: \"none\",\r\n              },\r\n              mr: 2,\r\n            }}\r\n            src={user?.avatar}\r\n          />\r\n          <TextField\r\n            disabled={reduxTicket[ticketId].ticketStatus === 2 || disabled}\r\n            fullWidth\r\n            onChange={handleChange}\r\n            onKeyUp={handleKeyUp}\r\n            placeholder=\"Leave a message\"\r\n            value={body}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          />\r\n          <Tooltip title=\"Send\">\r\n            <span>\r\n              <IconButton\r\n                color=\"primary\"\r\n                disabled={!body || disabled}\r\n                onClick={handleSend}\r\n              >\r\n                <SendIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nChatMessageAdd.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  onSend: PropTypes.func,\r\n};\r\n\r\nChatMessageAdd.defaultProps = {\r\n  disabled: false,\r\n};\r\n\r\nexport default ChatMessageAdd;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box } from \"@material-ui/core\";\r\n// import useAuth from \"../../../hooks/useAuth\";\r\nimport Scrollbar from \"../../Scrollbar\";\r\nimport ChatMessage from \"./ChatMessage\";\r\n\r\nconst ChatMessages = (props) => {\r\n  const { ticket } = props;\r\n  const rootRef = useRef(null);\r\n  // const { user } = useAuth();\r\n  // let senderAvatar;\r\n  let senderName;\r\n  let senderType;\r\n\r\n  const scrollToBottom = () => {\r\n    if (rootRef?.current?._container) {\r\n      rootRef.current._container.scrollTop =\r\n        rootRef.current._container.scrollHeight;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [ticket, scrollToBottom]);\r\n\r\n  return (\r\n    <Scrollbar options={{ suppressScrollX: true }} ref={rootRef}>\r\n      <Box sx={{ p: 2 }}>\r\n        {ticket?.messages.map((message) => {\r\n          const participant = message.sendBy;\r\n          {/* console.log(message.sendBy, JSON.parse(localStorage.getItem('User')).id); */}\r\n          if (JSON.parse(localStorage.getItem('User'))?.id && participant === JSON.parse(localStorage.getItem('User')).id) {\r\n            senderName = \"\";\r\n            senderType = \"admin\";\r\n          } else {\r\n            senderName = \"\";\r\n            senderType = \"user\";\r\n          }\r\n          return (\r\n            <ChatMessage\r\n              createdAt={message.createdAt}\r\n              message={message.message}\r\n              key={message.ticketMessageId}\r\n              senderName={senderName}\r\n              senderType={senderType}\r\n            />\r\n          );\r\n        })}\r\n      </Box>\r\n    </Scrollbar>\r\n  );\r\n};\r\n\r\n// ChatMessages.propTypes = {\r\n//   messages: PropTypes.array,\r\n//   participants: PropTypes.array,\r\n// };\r\n\r\nexport default ChatMessages;\r\n","// eslint-disable-next-line consistent-return\r\nconst deepCopy = (obj) => {\r\n  if (typeof obj !== 'object' || obj === null) {\r\n    return obj;\r\n  }\r\n\r\n  if (obj instanceof Date) {\r\n    return new Date(obj.getTime());\r\n  }\r\n\r\n  if (obj instanceof Array) {\r\n    return obj.reduce((arr, item, i) => {\r\n      arr[i] = deepCopy(item);\r\n      return arr;\r\n    }, []);\r\n  }\r\n\r\n  if (obj instanceof Object) {\r\n    return Object.keys(obj).reduce((newObj, key) => {\r\n      newObj[key] = deepCopy(obj[key]);\r\n      return newObj;\r\n    }, {});\r\n  }\r\n};\r\n\r\nexport default deepCopy;\r\n","import { subDays, subHours, subMinutes } from 'date-fns';\r\nimport createResourceId from '../utils/createResourceId';\r\nimport deepCopy from '../utils/deepCopy';\r\n\r\nconst now = new Date();\r\n\r\nconst contacts = [\r\n  {\r\n    id: '5e8891ab188cd2855e6029b7',\r\n    avatar: '/static/mock-images/avatars/avatar-alcides_antonio.png',\r\n    isActive: true,\r\n    lastActivity: now.getTime(),\r\n    name: 'Alcides Antonio',\r\n    username: 'alcides.antonio'\r\n  },\r\n  {\r\n    id: '5e887a62195cc5aef7e8ca5d',\r\n    avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\r\n    isActive: false,\r\n    lastActivity: subHours(now, 2).getTime(),\r\n    name: 'Marcus Finn',\r\n    username: 'marcus.finn'\r\n  },\r\n  {\r\n    id: '5e887ac47eed253091be10cb',\r\n    avatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\r\n    isActive: false,\r\n    lastActivity: subMinutes(now, 15).getTime(),\r\n    name: 'Carson Darrin',\r\n    username: 'carson.darrin'\r\n  },\r\n  {\r\n    id: '5e887b209c28ac3dd97f6db5',\r\n    avatar: '/static/mock-images/avatars/avatar-fran_perez.png',\r\n    isActive: true,\r\n    lastActivity: now.getTime(),\r\n    name: 'Fran Perez',\r\n    username: 'fran.perez'\r\n  },\r\n  {\r\n    id: '5e887b7602bdbc4dbb234b27',\r\n    avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\r\n    isActive: true,\r\n    lastActivity: now.getTime(),\r\n    name: 'Jie Yan Song',\r\n    username: 'jie.yan.song'\r\n  },\r\n  {\r\n    id: '5e86805e2bafd54f66cc95c3',\r\n    avatar: '/static/mock-images/avatars/avatar-miron_vitold.png',\r\n    isActive: false,\r\n    lastActivity: subDays(now, 2).getTime(),\r\n    name: 'Miron Vitold',\r\n    username: 'miron.vitold'\r\n  },\r\n  {\r\n    id: '5e887a1fbefd7938eea9c981',\r\n    avatar: '/static/mock-images/avatars/avatar-penjani_inyene.png',\r\n    isActive: false,\r\n    lastActivity: subHours(now, 6).getTime(),\r\n    name: 'Penjani Inyene',\r\n    username: 'penjani.inyene'\r\n  },\r\n  {\r\n    id: '5e887d0b3d090c1b8f162003',\r\n    avatar: '/static/mock-images/avatars/avatar-omar_darobe.png',\r\n    isActive: true,\r\n    lastActivity: now.getTime(),\r\n    name: 'Omar Darobe',\r\n    username: 'omar.darobe'\r\n  },\r\n  {\r\n    id: '5e88792be2d4cfb4bf0971d9',\r\n    avatar: '/static/mock-images/avatars/avatar-siegbert_gottfried.png',\r\n    isActive: true,\r\n    lastActivity: now.getTime(),\r\n    name: 'Siegbert Gottfried',\r\n    username: 'siegbert.gottfried'\r\n  },\r\n  {\r\n    id: '5e8877da9a65442b11551975',\r\n    avatar: '/static/mock-images/avatars/avatar-iulia_albu.png',\r\n    isActive: true,\r\n    lastActivity: now.getTime(),\r\n    name: 'Iulia Albu',\r\n    username: 'iulia.albu'\r\n  },\r\n  {\r\n    id: '5e8680e60cba5019c5ca6fda',\r\n    avatar: '/static/mock-images/avatars/avatar-nasimiyu_danai.png',\r\n    isActive: true,\r\n    lastActivity: now.getTime(),\r\n    name: 'Nasimiyu Danai',\r\n    username: 'nasimiyu.danai'\r\n  }\r\n];\r\n\r\nconst threads = [\r\n  {\r\n    id: '5e867eb9de721aecaccf4f7b',\r\n    messages: [\r\n      {\r\n        id: '5e867f0a5bc0ff2bfa07bfa6',\r\n        attachments: [],\r\n        body: 'Hey, nice projects! I really liked the one in react. What\\'s your quote on kinda similar project?',\r\n        contentType: 'text',\r\n        createdAt: subHours(now, 10).getTime(),\r\n        senderId: '5e86805e2bafd54f66cc95c3'\r\n      },\r\n      {\r\n        id: '5e867f167d5f78109ae9f2a4',\r\n        attachments: [],\r\n        body: 'I would need to know more details, but my hourly rate stats at $35/hour. Thanks!',\r\n        contentType: 'text',\r\n        createdAt: subHours(now, 2).getTime(),\r\n        senderId: '5e86809283e28b96d2d38537'\r\n      },\r\n      {\r\n        id: '5e867f1c9ca72084693528f4',\r\n        attachments: [],\r\n        body: 'Well it\\'s a really easy one, I\\'m sure we can make it half of the price.',\r\n        contentType: 'text',\r\n        createdAt: subMinutes(now, 5).getTime(),\r\n        senderId: '5e86805e2bafd54f66cc95c3'\r\n      },\r\n      {\r\n        id: '5e867f22fd2e27a09849b4db',\r\n        attachments: [],\r\n        body: 'Then why don\\'t you make it if it\\'s that easy? Sorry I\\'m not interetes, have fantastic day Adam!',\r\n        contentType: 'text',\r\n        createdAt: subMinutes(now, 3).getTime(),\r\n        senderId: '5e86809283e28b96d2d38537'\r\n      },\r\n      {\r\n        id: '5e867f28a34d45ac6eb5c41f',\r\n        attachments: [],\r\n        body: 'Last offer, $25 per hour',\r\n        contentType: 'text',\r\n        createdAt: subMinutes(now, 1).getTime(),\r\n        senderId: '5e86805e2bafd54f66cc95c3'\r\n      },\r\n      {\r\n        id: '5e867f2dba984a3f78b33526',\r\n        attachments: [],\r\n        body: '/static/mock-images/projects/project_4.png',\r\n        contentType: 'image',\r\n        createdAt: subMinutes(now, 1).getTime(),\r\n        senderId: '5e86805e2bafd54f66cc95c3'\r\n      }\r\n    ],\r\n    participants: [\r\n      {\r\n        id: '5e86809283e28b96d2d38537',\r\n        avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\r\n        name: 'Jane Rotanson',\r\n        username: 'jane.rotanson'\r\n      },\r\n      {\r\n        id: '5e86805e2bafd54f66cc95c3',\r\n        avatar: '/static/mock-images/avatars/avatar-miron_vitold.png',\r\n        name: 'Miron Vitold',\r\n        username: 'miron.vitold'\r\n      }\r\n    ],\r\n    type: 'ONE_TO_ONE',\r\n    unreadCount: 2\r\n  },\r\n  {\r\n    id: '5e867fa7082c3c5921403a26',\r\n    messages: [\r\n      {\r\n        id: '5e867fc180837d901bd9bca1',\r\n        attachments: [],\r\n        body: 'Hey, would you like to collaborate?',\r\n        contentType: 'text',\r\n        createdAt: subMinutes(now, 6).getTime(),\r\n        senderId: '5e8680e60cba5019c5ca6fda'\r\n      },\r\n      {\r\n        id: '5e8d6fb695df7971237fc173',\r\n        attachments: [],\r\n        body: 'Hi, Merrile!',\r\n        contentType: 'text',\r\n        createdAt: subMinutes(now, 5).getTime(),\r\n        senderId: '5e86809283e28b96d2d38537'\r\n      },\r\n      {\r\n        id: '58825a290eb4d4271a54f188',\r\n        attachments: [],\r\n        body: 'Hello everyone 😀',\r\n        contentType: 'text',\r\n        createdAt: subMinutes(now, 2).getTime(),\r\n        senderId: '5e8891ab188cd2855e6029b7'\r\n      }\r\n    ],\r\n    participants: [\r\n      {\r\n        id: '5e86809283e28b96d2d38537',\r\n        avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\r\n        name: 'Jane Rotanson',\r\n        username: 'jane.rotanson'\r\n      },\r\n      {\r\n        id: '5e8680e60cba5019c5ca6fda',\r\n        avatar: '/static/mock-images/avatars/avatar-nasimiyu_danai.png',\r\n        name: 'Nasimiyu Danai',\r\n        username: 'nasimiyu.danai'\r\n      },\r\n      {\r\n        id: '5e8891ab188cd2855e6029b7',\r\n        avatar: '/static/mock-images/avatars/avatar-alcides_antonio.png',\r\n        name: 'Alcides Antonio',\r\n        username: 'alcides.antonio'\r\n      }\r\n    ],\r\n    type: 'GROUP',\r\n    unreadCount: 0\r\n  }\r\n];\r\n\r\nconst findContactByUsername = (username) => {\r\n  const contact = contacts.find((_contact) => _contact.username === username);\r\n\r\n  return contact || null;\r\n};\r\n\r\nconst findThreadById = (threadId) => {\r\n  const thread = threads.find((_threadId) => _threadId.id === threadId);\r\n\r\n  return thread || null;\r\n};\r\n\r\n// This means that we are looking for ONE_TO_ONE thread\r\nconst findThreadByOtherParticipantId = (participantId) => {\r\n  const thread = threads.find((_thread) => {\r\n    if (_thread.type !== 'ONE_TO_ONE') {\r\n      return false;\r\n    }\r\n\r\n    const participant = _thread.participants.find((_participant) => (_participant.id\r\n      === participantId));\r\n\r\n    return !!participant;\r\n  });\r\n\r\n  return thread || null;\r\n};\r\n\r\nconst findThreadByParticipantIds = (participantIds) => {\r\n  const thread = threads.find((_thread) => {\r\n    if (_thread.participants.length < participantIds.length) {\r\n      return false;\r\n    }\r\n\r\n    const foundParticipantIds = new Set();\r\n\r\n    thread.participants.forEach((participant) => {\r\n      foundParticipantIds.add(participant.id);\r\n    });\r\n\r\n    return foundParticipantIds.size === participantIds.length;\r\n  });\r\n\r\n  return thread || null;\r\n};\r\n\r\nclass ChatApi {\r\n  getContacts() {\r\n    return Promise.resolve(deepCopy(contacts));\r\n  }\r\n\r\n  searchContacts(query) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let foundContacts = contacts;\r\n\r\n        if (query) {\r\n          const cleanQuery = query.toLowerCase().trim();\r\n          foundContacts = foundContacts.filter((contact) => (contact.name.toLowerCase().includes(cleanQuery)));\r\n        }\r\n\r\n        resolve(deepCopy(foundContacts));\r\n      } catch (err) {\r\n        console.error('[Chat Api]: ', err);\r\n        reject(new Error('Internal server error'));\r\n      }\r\n    });\r\n  }\r\n\r\n  getParticipants(threadKey) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const participants = [];\r\n\r\n        // Thread key might be an ID if thread type is GROUP\r\n        // otherwise it represents an username\r\n        const thread = findThreadById(threadKey);\r\n\r\n        if (thread) {\r\n          participants.push(...thread.participants);\r\n        } else {\r\n          const contact = findContactByUsername(threadKey);\r\n\r\n          if (contact) {\r\n            participants.push({\r\n              id: contact.id,\r\n              avatar: contact.avatar,\r\n              name: contact.name,\r\n              username: contact.username\r\n            });\r\n          }\r\n        }\r\n\r\n        resolve(deepCopy(participants));\r\n      } catch (err) {\r\n        console.error('[Chat Api]: ', err);\r\n        reject(new Error('Internal server error'));\r\n      }\r\n    });\r\n  }\r\n\r\n  getThreads() {\r\n    return Promise.resolve(deepCopy(threads));\r\n  }\r\n\r\n  getThread(threadKey) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        // Thread key might be an ID if thread type is GROUP\r\n        // otherwise it represents an username\r\n        let thread = findThreadById(threadKey);\r\n\r\n        if (thread) {\r\n          resolve(deepCopy(thread));\r\n          return;\r\n        }\r\n\r\n        // At this point, thread key should represent an existing contact\r\n        // If no contact found, the user is trying a shady route\r\n        // If contact exists, user might want to start a new conversation\r\n        const contact = findContactByUsername(threadKey);\r\n\r\n        if (!contact) {\r\n          reject(new Error('Unable to find the contact'));\r\n          return;\r\n        }\r\n\r\n        // This could return a null if no thread found\r\n        thread = findThreadByOtherParticipantId(contact.id);\r\n\r\n        resolve(deepCopy(thread));\r\n      } catch (err) {\r\n        console.error('[Chat Api]: ', err);\r\n        reject(new Error('Internal server error'));\r\n      }\r\n    });\r\n  }\r\n\r\n  markThreadAsSeen(threadId) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const thread = threads.find((_thread) => _thread.id === threadId);\r\n\r\n        if (thread) {\r\n          thread.unreadCount = 0;\r\n        }\r\n\r\n        resolve(true);\r\n      } catch (err) {\r\n        console.error('[Chat Api]: ', err);\r\n        reject(new Error('Internal server error'));\r\n      }\r\n    });\r\n  }\r\n\r\n  addMessage({ threadId, recipientIds, body }) {\r\n    // Adding a new message to a thread can by done in 3 ways\r\n    // 1) By specifying a thread id, this means that the thread already exists\r\n    // 2) By specifying the other user id (if ONE_TO_ONE thread), thread might exist\r\n    // 3) By specifying a list of recipients, thread might already exist\r\n\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        // On server get current identity (user) from the request\r\n        const user = {\r\n          id: '5e86809283e28b96d2d38537',\r\n          avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\r\n          name: 'Jane Rotanson',\r\n          username: 'jane.rotanson'\r\n        };\r\n\r\n        let thread = null;\r\n\r\n        // Try to find the thread by threadId if provided\r\n        if (threadId) {\r\n          thread = findThreadById(threadId);\r\n\r\n          if (!thread) {\r\n            reject(new Error('Invalid thread id'));\r\n            return;\r\n          }\r\n        }\r\n\r\n        // Try to find the thread by recipientIds is provided\r\n        if (recipientIds) {\r\n          const participantIds = [...recipientIds, user.id];\r\n\r\n          thread = findThreadByParticipantIds(participantIds);\r\n        }\r\n\r\n        const message = {\r\n          id: createResourceId(),\r\n          attachments: [],\r\n          body,\r\n          contentType: 'text',\r\n          createdAt: now.getTime(),\r\n          senderId: user.id\r\n        };\r\n\r\n        // If thread exists, add the message\r\n        if (thread) {\r\n          thread.messages.push(message);\r\n        } else {\r\n          // If it does not, it means that we have to create a new thread\r\n          const participants = [user];\r\n\r\n          recipientIds.forEach((recipientId) => {\r\n            const contact = contacts.find((_contact) => _contact.id === recipientId);\r\n\r\n            // This should not naturally occur\r\n            if (!contact) {\r\n              throw new Error('Contact not found');\r\n            }\r\n\r\n            participants.push({\r\n              id: contact.id,\r\n              avatar: contact.avatar,\r\n              name: contact.name,\r\n              username: contact.username\r\n            });\r\n          });\r\n\r\n          thread = {\r\n            id: createResourceId(),\r\n            messages: [message],\r\n            participants,\r\n            type: participants.length === 2 ? 'ONE_TO_ONE' : 'GROUP',\r\n            unreadCount: 0\r\n          };\r\n        }\r\n\r\n        resolve({\r\n          threadId: thread.id,\r\n          message\r\n        });\r\n      } catch (err) {\r\n        console.error('[Chat Api]: ', err);\r\n        reject(new Error('Internal server error'));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const chatApi = new ChatApi();\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst PencilAlt = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'PencilAlt'\r\n);\r\n\r\nexport default PencilAlt;\r\n","import { Avatar, Box, Button, Typography } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { resolveTicketApi } from \"../../../api/Tickets\";\r\nimport ConfirmationModal from \"../../common/ConfirmationModal\";\r\nimport getInitials from \"../../../utils/getInitials\";\r\nimport { useEffect, useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { loadingActions } from \"../../../slices/Loading\";\r\nimport { TicketActions } from \"../../../slices/TicketSlice\";\r\n\r\nconst ChatThreadToolbar = (props) => {\r\n  const { ticket } = props;\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [isResolved, setIsResolved] = useState(false);\r\n  const reduxUsers = useSelector((state) => state.UData.users);\r\n  const reduxDrivers = useSelector((state) => state.UData.drivers);\r\n  const [userDetail, setUserDetail] = useState(undefined);\r\n\r\n  // Sets new value for Resolved\r\n  const handleResolveConfirm = () => {\r\n    setIsResolved(true);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(ticket?.createdBy){\r\n      if(reduxUsers[ticket.createdBy]){\r\n        setUserDetail(reduxUsers[ticket.createdBy])\r\n      }else if(reduxDrivers[ticket.createdBy]){\r\n        setUserDetail(reduxDrivers[ticket.createdBy])\r\n      }\r\n    }\r\n  },[reduxUsers, reduxDrivers])\r\n\r\n  // Close Confirmation\r\n  const handleCloseConfirm = () => {\r\n    setIsResolved(false);\r\n  };\r\n  //console.log(resolveTicketApi)\r\n  const handleResolved = async () => {\r\n    try {\r\n      dispatch(loadingActions.increment());\r\n      const resolve = await resolveTicketApi(ticket.id);\r\n      dispatch(TicketActions.setTicketStatus({\r\n        ticketId : ticket.id,\r\n        status: 2\r\n      }))\r\n      setIsResolved(true)\r\n      \r\n      toast.success(\"Ticket Resolved Successfully.\");\r\n      navigate(\"/tickets\");\r\n    } catch (error) {\r\n      if (error.response.data && error.response.data.message) {\r\n        toast.error(error.response.data.message)\r\n      } else {\r\n        toast.error(\"Oops! Something Went Wrong.\");\r\n      }\r\n      console.log(error)\r\n    } finally {\r\n      dispatch(loadingActions.decrement());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          alignItems: \"center\",\r\n          backgroundColor: \"background.paper\",\r\n          borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          flexShrink: 0,\r\n          minHeight: 64,\r\n          px: 2,\r\n          py: 1,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={userDetail?.profilePic}\r\n            sx={{\r\n              height: 42,\r\n              width: 42,\r\n            }}\r\n          >\r\n            {getInitials(userDetail?.firstName)}\r\n          </Avatar>\r\n          <Typography color=\"textPrimary\" sx={{ ml: 2 }} variant=\"subtitle2\">\r\n            {userDetail?.firstName +\r\n              \" \" +\r\n              userDetail?.lastName}\r\n          </Typography>\r\n        </Box>\r\n        {\r\n          ticket?.ticketStatus === 2 ?\r\n            <Box sx={{ background: '#fff', color: '#3BAE39', fontWeight: '500' }}>Resolved</Box>\r\n            : \r\n            <Button\r\n              disabled={ticket?.ticketStatus === 2}\r\n              sx={{ background: \"#fff\", color: \"#3BAE39\" }}\r\n              onClick={() => {\r\n                handleResolveConfirm();\r\n              }}\r\n            >\r\n            Resolve\r\n            </Button>\r\n        }\r\n      </Box>\r\n\r\n      <ConfirmationModal\r\n        open={isResolved}\r\n        handleClose={handleCloseConfirm}\r\n        handleConfirm={handleResolved}\r\n        title={\"Resolve Ticket\"}\r\n        description={\"Confirm ticket resolved ?\"}\r\n        cancleButtonName={\"No\"}\r\n        confirmButtonName={\"Yes\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatThreadToolbar;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { Box, Divider } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"../../../store\";\r\nimport ChatMessageAdd from \"./ChatMessageAdd\";\r\nimport ChatMessages from \"./ChatMessages\";\r\nimport ChatThreadToolbar from \"./ChatThreadToolbar\";\r\nimport { sendMessageApi } from \"../../../api/Tickets\";\r\nimport { TicketActions } from \"../../../slices/TicketSlice\";\r\n\r\nconst ChatThread = () => {\r\n  // Convert string id to number\r\n  let { id } = useParams();\r\n  let idNum = Number(id);\r\n  const dispatch = useDispatch();\r\n\r\n  // get Api data\r\n  const reduxTicket = useSelector((state) => state.ticket.ticket);\r\n\r\n  // handle send Message\r\n  const handleSendMessage = async (body) => {\r\n    try {\r\n      const newMessage = await sendMessageApi(body, idNum);\r\n      dispatch(\r\n        TicketActions.sendMessage({ newMessage: newMessage, id: idNum })\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"background.default\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n      }}\r\n    >\r\n      <ChatThreadToolbar ticket={reduxTicket[idNum]} />\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <ChatMessages ticket={reduxTicket[idNum]} />\r\n      </Box>\r\n      <Divider />\r\n      <ChatMessageAdd\r\n        disabled={false}\r\n        ticketId={idNum}\r\n        onSend={handleSendMessage}\r\n      />\r\n    </Box>\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default ChatThread;\r\n","import { useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Chip,\r\n  ClickAwayListener,\r\n  Input,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Paper,\r\n  Popper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { chatApi } from \"../../../__fakeApi__/chatApi\";\r\n\r\nconst getFilteredSearchResults = (results, recipients) => {\r\n  const recipientIds = recipients.reduce(\r\n    (acc, recipient) => [...acc, recipient.id],\r\n    []\r\n  );\r\n\r\n  return results.filter((result) => !recipientIds.includes(result.id));\r\n};\r\n\r\nconst ChatThreadComposer = (props) => {\r\n  const { onAddRecipient, onRemoveRecipient, recipients, ...other } = props;\r\n  const containerRef = useRef(null);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [isSearchFocused, setIsSearchFocused] = useState(true);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const filteredSearchResults = getFilteredSearchResults(\r\n    searchResults,\r\n    recipients\r\n  );\r\n  const displayResults = query && isSearchFocused;\r\n\r\n  const handleSearchChange = async (event) => {\r\n    try {\r\n      const { value } = event.target;\r\n\r\n      setQuery(value);\r\n\r\n      if (value) {\r\n        const data = await chatApi.searchContacts(value);\r\n\r\n        setSearchResults(data);\r\n      } else {\r\n        setSearchResults([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleSearchBlur = () => {\r\n    if (!displayResults) {\r\n      setIsSearchFocused(false);\r\n    }\r\n  };\r\n\r\n  const handleSearchFocus = () => {\r\n    setIsSearchFocused(true);\r\n  };\r\n\r\n  const handleSearchResultsClickAway = () => {\r\n    setIsSearchFocused(false);\r\n  };\r\n\r\n  const handleAddRecipient = (contact) => {\r\n    setQuery(\"\");\r\n\r\n    if (onAddRecipient) {\r\n      onAddRecipient(contact);\r\n    }\r\n  };\r\n\r\n  const handleRemoveRecipient = (recipientId) => {\r\n    if (onRemoveRecipient) {\r\n      onRemoveRecipient(recipientId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        p: 2,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Typography variant=\"body1\" color=\"textSecondary\">\r\n        To:\r\n      </Typography>\r\n      <Box\r\n        ref={containerRef}\r\n        sx={{\r\n          ml: 1,\r\n          \"& .MuiInputBase-root\": {\r\n            backgroundColor: \"background.paper\",\r\n            borderRadius: 16,\r\n            height: 32,\r\n            maxWidth: recipients.length > 0 ? 120 : \"auto\",\r\n            px: 2,\r\n          },\r\n        }}\r\n      >\r\n        {recipients.map((recipient) => (\r\n          <Box component=\"span\" key={recipient.id} sx={{ mr: 2 }}>\r\n            <Chip\r\n              color=\"primary\"\r\n              label={recipient.name}\r\n              onDelete={() => handleRemoveRecipient(recipient.id)}\r\n              size=\"small\"\r\n            />\r\n          </Box>\r\n        ))}\r\n        <Input\r\n          disableUnderline\r\n          onBlur={handleSearchBlur}\r\n          onChange={handleSearchChange}\r\n          onFocus={handleSearchFocus}\r\n          placeholder={recipients.length === 0 ? \"Search contacts\" : \"\"}\r\n          value={query}\r\n        />\r\n      </Box>\r\n      {displayResults && (\r\n        <ClickAwayListener onClickAway={handleSearchResultsClickAway}>\r\n          <Popper\r\n            anchorEl={containerRef.current}\r\n            open={isSearchFocused}\r\n            placement=\"bottom-start\"\r\n          >\r\n            <Paper\r\n              sx={{\r\n                mt: 1,\r\n                maxWidth: \"100%\",\r\n                width: 320,\r\n              }}\r\n            >\r\n              {filteredSearchResults.length === 0 ? (\r\n                <Box\r\n                  sx={{\r\n                    p: 2,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography color=\"textPrimary\" gutterBottom variant=\"h6\">\r\n                    Nothing Found\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"body2\">\r\n                    We couldn&apos;t find any matches for &quot;\r\n                    {query}\r\n                    &quot;. Try checking for typos or using complete words.\r\n                  </Typography>\r\n                </Box>\r\n              ) : (\r\n                <>\r\n                  <Box\r\n                    sx={{\r\n                      px: 2,\r\n                      pt: 2,\r\n                    }}\r\n                  >\r\n                    <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                      Contacts\r\n                    </Typography>\r\n                  </Box>\r\n                  <List>\r\n                    {filteredSearchResults.map((result) => (\r\n                      <ListItem\r\n                        button\r\n                        key={result.id}\r\n                        onClick={() => handleAddRecipient(result)}\r\n                      >\r\n                        <ListItemAvatar>\r\n                          <Avatar src={result.avatar} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                          primary={result.name}\r\n                          primaryTypographyProps={{\r\n                            color: \"textPrimary\",\r\n                            noWrap: true,\r\n                            variant: \"subtitle2\",\r\n                          }}\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </>\r\n              )}\r\n            </Paper>\r\n          </Popper>\r\n        </ClickAwayListener>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nChatThreadComposer.propTypes = {\r\n  onAddRecipient: PropTypes.func,\r\n  onRemoveRecipient: PropTypes.func,\r\n  recipients: PropTypes.array,\r\n};\r\n\r\nChatThreadComposer.defaultProps = {\r\n  recipients: [],\r\n};\r\n\r\nexport default ChatThreadComposer;\r\n","import PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  AvatarGroup,\r\n  Box,\r\n  Chip,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\n\r\nconst getDetails = (thread, currentUserId) => {\r\n  const otherParticipants = thread.participants.filter(\r\n    (participant) => participant.id !== currentUserId\r\n  );\r\n  const displayNames = otherParticipants\r\n    .reduce((names, participant) => [...names, participant.name], [])\r\n    .join(\", \");\r\n  let displayText = \"\";\r\n  const lastMessage = thread.messages[thread.messages.length - 1];\r\n\r\n  if (lastMessage) {\r\n    const sender = lastMessage.senderId === currentUserId ? \"Me: \" : \"\";\r\n    const message =\r\n      lastMessage.contentType === \"image\" ? \"Sent a photo\" : lastMessage.body;\r\n\r\n    displayText = `${sender}${message}`;\r\n  }\r\n\r\n  return {\r\n    otherParticipants,\r\n    displayNames,\r\n    displayText,\r\n  };\r\n};\r\n\r\nconst ChatThreadItem = (props) => {\r\n  const { active, thread, onSelect, ...other } = props;\r\n  const details = getDetails(thread, \"5e86809283e28b96d2d38537\");\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      onClick={onSelect}\r\n      sx={{\r\n        backgroundColor: active && \"action.selected\",\r\n        boxShadow: (theme) =>\r\n          active && `inset 4px 0px 0px ${theme.palette.primary.main}`,\r\n      }}\r\n      {...other}\r\n    >\r\n      <ListItemAvatar\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: {\r\n            sm: \"flex-start\",\r\n            xs: \"center\",\r\n          },\r\n        }}\r\n      >\r\n        <AvatarGroup\r\n          max={2}\r\n          sx={{\r\n            \"& .MuiAvatar-root\":\r\n              details.otherParticipants.length > 1\r\n                ? {\r\n                    height: 26,\r\n                    width: 26,\r\n                    \"&:nth-of-type(2)\": {\r\n                      mt: \"10px\",\r\n                    },\r\n                  }\r\n                : {\r\n                    height: 36,\r\n                    width: 36,\r\n                  },\r\n          }}\r\n        >\r\n          {details.otherParticipants.map((participant) => (\r\n            <Avatar key={participant.id} src={participant.avatar} />\r\n          ))}\r\n        </AvatarGroup>\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={details.displayNames}\r\n        primaryTypographyProps={{\r\n          color: \"textPrimary\",\r\n          noWrap: true,\r\n          variant: \"subtitle2\",\r\n        }}\r\n        secondary={details.displayText}\r\n        secondaryTypographyProps={{\r\n          color: \"textSecondary\",\r\n          noWrap: true,\r\n          variant: \"body2\",\r\n        }}\r\n        sx={{\r\n          display: {\r\n            sm: \"block\",\r\n            xs: \"none\",\r\n          },\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          alignItems: \"flex-end\",\r\n          display: {\r\n            sm: \"flex\",\r\n            xs: \"none\",\r\n          },\r\n          flexDirection: \"column\",\r\n          ml: 2,\r\n        }}\r\n      >\r\n        {thread.unreadCount > 0 && (\r\n          <Chip\r\n            color=\"primary\"\r\n            label={thread.unreadCount}\r\n            size=\"small\"\r\n            sx={{\r\n              height: 18,\r\n              mt: \"2px\",\r\n              minWidth: 18,\r\n              p: \"2px\",\r\n            }}\r\n          />\r\n        )}\r\n      </Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nChatThreadItem.propTypes = {\r\n  active: PropTypes.bool,\r\n  onSelect: PropTypes.func,\r\n  thread: PropTypes.object.isRequired,\r\n};\r\n\r\nChatThreadItem.defaultProps = {\r\n  active: false,\r\n};\r\n\r\nexport default ChatThreadItem;\r\n","import { Helmet } from \"react-helmet-async\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { ChatThread } from \"../../components/dashboard/chat\";\r\n\r\nconst TicketDetails = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Ticket-Chat | Hopon Admin</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          display: \"flex\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <ChatThread />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicketDetails;\r\n"],"sourceRoot":""}