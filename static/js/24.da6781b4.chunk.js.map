{"version":3,"sources":["icons/Check.js","icons/Trash.js","icons/X.js","components/dashboard/tickets/TicketListBulkActions.js","components/DateRangePicker.js","components/dashboard/tickets/TicketListTable.js","pages/dashboard/TicketList.js"],"names":["Check","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Trash","X","TicketListBulkActions","props","onDelete","onMarkPaid","onMarkUnpaid","open","selected","other","Drawer","anchor","PaperProps","elevation","variant","Box","sx","p","Grid","alignItems","container","spacing","item","md","display","xs","Typography","color","length","flexWrap","justifyContent","ml","Button","onClick","startIcon","fontSize","defaultProps","MuiDateRangePicker","cb","useState","value","setValue","DateRangePicker","startText","endText","onChange","newValue","onChangeDate","renderInput","startProps","endProps","TextField","helperText","mx","statusOptions","label","getStatusLabel","paymentStatus","all","text","1","2","Label","TicketListTable","tickets","dispatch","useDispatch","page","setPage","query","setQuery","limit","setLimit","status","filters","setFilters","dataFilterValue","setDateFilterValue","getTicket","a","getAllTicket","response","TicketActions","toast","error","filteredTickets","filter","ticket","matches","containsQuery","forEach","property","toString","toLowerCase","includes","ticketStatus","applyFilters","Object","values","paginatedTickets","slice","applyPagination","startDate","endDate","newData","Date","createdAt","applyDateFilters","Card","CardHeader","title","m","maxWidth","width","fullWidth","InputProps","startAdornment","InputAdornment","position","Search","event","target","placeholder","name","prevFilters","select","SelectProps","native","map","statusOption","style","marginLeft","Sync","Scrollbar","Table","TableHead","TableRow","TableCell","TableBody","align","colSpan","UTC","component","RouterLink","to","PAGES","TICKET_DETAILS","replace","id","textDecoration","Link","underline","refId","subject","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","TicketList","settings","useSettings","reduxTicket","useSelector","state","backgroundColor","minHeight","py","Container","compact","Breadcrumbs","aria-label","separator","ChevronRight","mt"],"mappings":"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","file":"static/js/24.da6781b4.chunk.js","sourcesContent":["import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Check = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Check'\r\n);\r\n\r\nexport default Check;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Trash = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Trash'\r\n);\r\n\r\nexport default Trash;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst X = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'X'\r\n);\r\n\r\nexport default X;\r\n","import PropTypes from \"prop-types\";\r\nimport { Box, Button, Drawer, Grid, Typography } from \"@material-ui/core\";\r\nimport CheckIcon from \"../../../icons/Check\";\r\nimport TrashIcon from \"../../../icons/Trash\";\r\nimport XIcon from \"../../../icons/X\";\r\n\r\nconst TicketListBulkActions = (props) => {\r\n  const { onDelete, onMarkPaid, onMarkUnpaid, open, selected, ...other } =\r\n    props;\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"bottom\"\r\n      open={open}\r\n      PaperProps={{ elevation: 1 }}\r\n      variant=\"persistent\"\r\n    >\r\n      <Box sx={{ p: 2 }} {...other}>\r\n        <Grid alignItems=\"center\" container spacing={2}>\r\n          <Grid\r\n            item\r\n            md={3}\r\n            sx={{\r\n              display: {\r\n                md: \"block\",\r\n                xs: \"none\",\r\n              },\r\n            }}\r\n          >\r\n            <Typography color=\"textSecondary\" variant=\"subtitle1\">\r\n              {selected.length} selected\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={6} xs={12}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"center\",\r\n                \"& > * + *\": {\r\n                  ml: 2,\r\n                },\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={onMarkPaid}\r\n                startIcon={<CheckIcon fontSize=\"small\" />}\r\n                variant=\"text\"\r\n              >\r\n                Mark Paid\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={onMarkUnpaid}\r\n                startIcon={<XIcon fontSize=\"small\" />}\r\n                variant=\"text\"\r\n              >\r\n                Mark Unpaid\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={onDelete}\r\n                startIcon={<TrashIcon fontSize=\"small\" />}\r\n                variant=\"text\"\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nTicketListBulkActions.propTypes = {\r\n  onDelete: PropTypes.func,\r\n  onMarkPaid: PropTypes.func,\r\n  onMarkUnpaid: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.array.isRequired,\r\n};\r\n\r\nTicketListBulkActions.defaultProps = {\r\n  open: false,\r\n};\r\n\r\nexport default TicketListBulkActions;\r\n","import React from \"react\";\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { DateRangePicker } from \"@material-ui/lab\";\r\nimport { useState } from \"react\";\r\n\r\nexport const MuiDateRangePicker = ({ cb }) => {\r\n  const [value, setValue] = useState([null, null]);\r\n\r\n  const onChangeDate = (value) => {\r\n    setValue(value);\r\n    if (cb) cb(value);\r\n  };\r\n  return (\r\n    <DateRangePicker\r\n      startText=\"From\"\r\n      endText=\"To\"\r\n      value={value}\r\n      onChange={(newValue) => {\r\n        onChangeDate(newValue);\r\n      }}\r\n      renderInput={(startProps, endProps) => (\r\n        <>\r\n          <TextField {...startProps} helperText={null} />\r\n          <Box sx={{ mx: 2 }}> to </Box>\r\n          <TextField {...endProps} helperText={null}></TextField>\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport { useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  InputAdornment,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Label from \"../../Label\";\r\nimport Scrollbar from \"../../Scrollbar\";\r\nimport { PAGES } from \"../../../constants\";\r\nimport SearchIcon from \"../../../icons/Search\";\r\nimport { MuiDateRangePicker } from \"../../DateRangePicker\";\r\nimport { Sync } from \"@material-ui/icons\";\r\nimport { TicketActions } from \"../../../slices/TicketSlice\";\r\nimport { getAllTicket } from \"../../../api/Tickets\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\n\r\n// Status Short-By\r\nconst statusOptions = [\r\n  {\r\n    label: \"All\",\r\n    value: \"all\",\r\n  },\r\n  {\r\n    label: \"Pending\",\r\n    value: \"1\",\r\n  },\r\n  {\r\n    label: \"Resolved\",\r\n    value: \"2\",\r\n  },\r\n];\r\n\r\n// Color-Status\r\nconst getStatusLabel = (paymentStatus) => {\r\n  const map = {\r\n    all: {\r\n      color: \"none\",\r\n      text: \"All\",\r\n    },\r\n    1: {\r\n      color: \"error\",\r\n      text: \"Pending\",\r\n    },\r\n    2: {\r\n      color: \"success\",\r\n      text: \"Resolved\",\r\n    },\r\n  };\r\n  const { text, color } = map[paymentStatus];\r\n\r\n  return <Label color={color}>{text}</Label>;\r\n};\r\n\r\nconst TicketListTable = (props) => {\r\n  const { tickets } = props;\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(0);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [limit, setLimit] = useState(5);\r\n  const [filters, setFilters] = useState({\r\n    status: null,\r\n  });\r\n  const [dataFilterValue, setDateFilterValue] = useState([null, null]);\r\n\r\n  // Pagination\r\n  const applyPagination = (tickets, page, limit) =>\r\n    tickets.slice(page * limit, page * limit + limit);\r\n\r\n  // Apply Filters\r\n  const applyFilters = (tickets, query, filters) =>\r\n    tickets.filter((ticket) => {\r\n      let matches = true;\r\n\r\n      if (query) {\r\n        const properties = [\"subject\"];\r\n        let containsQuery = false;\r\n\r\n        properties.forEach((property) => {\r\n          let value = ticket[property].toString();\r\n          if (value && value.toLowerCase().includes(query.toLowerCase())) {\r\n            containsQuery = true;\r\n          }\r\n        });\r\n\r\n        if (!containsQuery) {\r\n          matches = false;\r\n        }\r\n      }\r\n\r\n      if (filters.status && ticket.ticketStatus != filters.status) {\r\n        matches = false;\r\n      }\r\n\r\n      return matches;\r\n    });\r\n\r\n  // Date Range Picker\r\n  const applyDateFilters = (tickets, startDate, endDate) => {\r\n    if (startDate && endDate) {\r\n      return tickets.filter((ticket) => {\r\n        let newData = new Date(ticket.createdAt);\r\n        if (newData >= startDate && newData <= endDate) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n    return tickets;\r\n  };\r\n\r\n  // Pagination Change\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // Search Handle\r\n  const handleQueryChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  // Status Change handle\r\n  const handleStatusChange = (event) => {\r\n    let value = null;\r\n\r\n    if (event.target.value !== \"all\") {\r\n      value = event.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value,\r\n    }));\r\n  };\r\n\r\n  // Page Limit Handle\r\n  const handleLimitChange = (event) => {\r\n    setLimit(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const getTicket = async () => {\r\n    try {\r\n      const response = await getAllTicket();\r\n      dispatch(TicketActions.getTicket(response));\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleTicketSync = () => {\r\n    getTicket();\r\n  };\r\n\r\n  // Apply Filter & Pagination\r\n  let filteredTickets = applyFilters(Object.values(tickets), query, filters);\r\n  let filteredDate = applyDateFilters(\r\n    filteredTickets,\r\n    dataFilterValue[0],\r\n    dataFilterValue[1]\r\n  );\r\n  const paginatedTickets = applyPagination(filteredDate, page, limit);\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader title=\"Tickets\" />\r\n        <Box\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            m: -1,\r\n            p: 2,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              m: 1,\r\n              maxWidth: \"100%\",\r\n              width: 400,\r\n            }}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={handleQueryChange}\r\n              placeholder=\"Search Ticket\"\r\n              value={query}\r\n              variant=\"outlined\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              m: 1,\r\n              maxWidth: \"100%\",\r\n              width: 200,\r\n            }}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              label=\"Status\"\r\n              name=\"status\"\r\n              onChange={handleStatusChange}\r\n              select\r\n              SelectProps={{ native: true }}\r\n              value={filters.status}\r\n              variant=\"outlined\"\r\n            >\r\n              {statusOptions.map((statusOption) => (\r\n                <option key={statusOption.value} value={statusOption.value}>\r\n                  {statusOption.label}\r\n                </option>\r\n              ))}\r\n            </TextField>\r\n          </Box>\r\n\r\n          <MuiDateRangePicker\r\n            cb={(value) => {\r\n              setDateFilterValue(value);\r\n            }}\r\n          />\r\n          <Box style={{marginLeft : 'auto'}}>\r\n            <Button onClick={handleTicketSync}>\r\n              <Sync />\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Scrollbar>\r\n          <Box>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Id</TableCell>\r\n                  <TableCell>Trip Id</TableCell>\r\n                  <TableCell>Subject</TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {paginatedTickets.length === 0 ? (<TableCell align={'center'} colSpan={'100%'}>No Records Found</TableCell>)\r\n            :\r\n                paginatedTickets.map((ticket) => {\r\n                  const utcDate1 = new Date(Date.UTC(ticket.createdAt));\r\n                  return (\r\n                    <TableRow\r\n                      key={ticket.id}\r\n                      component={RouterLink}\r\n                      to={`/${PAGES.TICKET_DETAILS.replace(\":id\", ticket.id)}`}\r\n                      sx={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <TableCell>\r\n                        <Link\r\n                          color=\"textPrimary\"\r\n                          component={RouterLink}\r\n                          to={`/${PAGES.TICKET_DETAILS.replace(\r\n                            \":id\",\r\n                            ticket.id\r\n                          )}`}\r\n                          underline=\"none\"\r\n                          variant=\"subtitle2\"\r\n                        >\r\n                          {ticket.id}\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Link\r\n                          color=\"textPrimary\"\r\n                          component={RouterLink}\r\n                          to={`/${PAGES.TICKET_DETAILS.replace(\r\n                            \":id\",\r\n                            ticket.id\r\n                          )}`}\r\n                          underline=\"none\"\r\n                          variant=\"subtitle2\"\r\n                        >\r\n                          {ticket?.refId ?? \"-\"}\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Link\r\n                          color=\"textPrimary\"\r\n                          component={RouterLink}\r\n                          to={`/${PAGES.TICKET_DETAILS.replace(\r\n                            \":id\",\r\n                            ticket.id\r\n                          )}`}\r\n                          underline=\"none\"\r\n                          variant=\"subtitle2\"\r\n                        >\r\n                          {ticket.subject}\r\n                        </Link>\r\n                      </TableCell>\r\n\r\n                      <TableCell>\r\n                        {getStatusLabel(ticket.ticketStatus)}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </Box>\r\n        </Scrollbar>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={filteredTickets.length}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicketListTable;\r\n","import { Link as RouterLink } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { TicketListTable } from \"../../components/dashboard/tickets\";\r\nimport useSettings from \"../../hooks/useSettings\";\r\nimport ChevronRightIcon from \"../../icons/ChevronRight\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TicketList = () => {\r\n  const { settings } = useSettings();\r\n\r\n  const reduxTicket = useSelector((state) => state.ticket.ticket);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Ticket | Hopon Admin</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 8,\r\n        }}\r\n      >\r\n        <Container maxWidth={settings.compact ? \"xl\" : false}>\r\n          <Grid container justifyContent=\"space-between\" spacing={3}>\r\n            <Grid item>\r\n              <Typography color=\"textPrimary\" variant=\"h5\">\r\n                Tickets\r\n              </Typography>\r\n              <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/tickets\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Ticket Management\r\n                </Link>\r\n\r\n                <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                  Tickets\r\n                </Typography>\r\n              </Breadcrumbs>\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ mt: 3 }}>\r\n            <TicketListTable tickets={reduxTicket} />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicketList;\r\n"],"sourceRoot":""}